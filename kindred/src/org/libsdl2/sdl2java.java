/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.libsdl2;

public class sdl2java implements sdl2javaConstants {
  public static int SDL_Init(SWIGTYPE_p_uint32_t flags) {
    return sdl2javaJNI.SDL_Init(SWIGTYPE_p_uint32_t.getCPtr(flags));
  }

  public static int SDL_InitSubSystem(SWIGTYPE_p_uint32_t flags) {
    return sdl2javaJNI.SDL_InitSubSystem(SWIGTYPE_p_uint32_t.getCPtr(flags));
  }

  public static void SDL_QuitSubSystem(SWIGTYPE_p_uint32_t flags) {
    sdl2javaJNI.SDL_QuitSubSystem(SWIGTYPE_p_uint32_t.getCPtr(flags));
  }

  public static SWIGTYPE_p_uint32_t SDL_WasInit(SWIGTYPE_p_uint32_t flags) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_WasInit(SWIGTYPE_p_uint32_t.getCPtr(flags)), true);
  }

  public static void SDL_Quit() {
    sdl2javaJNI.SDL_Quit();
  }

  public static int SDL_main(int argc, SWIGTYPE_p_p_char argv) {
    return sdl2javaJNI.SDL_main(argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public static void SDL_SetMainReady() {
    sdl2javaJNI.SDL_SetMainReady();
  }

  public static SWIGTYPE_p_void SDL_malloc(long size) {
    long cPtr = sdl2javaJNI.SDL_malloc(size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_calloc(long nmemb, long size) {
    long cPtr = sdl2javaJNI.SDL_calloc(nmemb, size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_realloc(SWIGTYPE_p_void mem, long size) {
    long cPtr = sdl2javaJNI.SDL_realloc(SWIGTYPE_p_void.getCPtr(mem), size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_free(SWIGTYPE_p_void mem) {
    sdl2javaJNI.SDL_free(SWIGTYPE_p_void.getCPtr(mem));
  }

  public static void SDL_GetOriginalMemoryFunctions(SWIGTYPE_p_p_f_size_t__p_void malloc_func, SWIGTYPE_p_p_f_size_t_size_t__p_void calloc_func, SWIGTYPE_p_p_f_p_void_size_t__p_void realloc_func, SWIGTYPE_p_p_f_p_void__void free_func) {
    sdl2javaJNI.SDL_GetOriginalMemoryFunctions(SWIGTYPE_p_p_f_size_t__p_void.getCPtr(malloc_func), SWIGTYPE_p_p_f_size_t_size_t__p_void.getCPtr(calloc_func), SWIGTYPE_p_p_f_p_void_size_t__p_void.getCPtr(realloc_func), SWIGTYPE_p_p_f_p_void__void.getCPtr(free_func));
  }

  public static void SDL_GetMemoryFunctions(SWIGTYPE_p_p_f_size_t__p_void malloc_func, SWIGTYPE_p_p_f_size_t_size_t__p_void calloc_func, SWIGTYPE_p_p_f_p_void_size_t__p_void realloc_func, SWIGTYPE_p_p_f_p_void__void free_func) {
    sdl2javaJNI.SDL_GetMemoryFunctions(SWIGTYPE_p_p_f_size_t__p_void.getCPtr(malloc_func), SWIGTYPE_p_p_f_size_t_size_t__p_void.getCPtr(calloc_func), SWIGTYPE_p_p_f_p_void_size_t__p_void.getCPtr(realloc_func), SWIGTYPE_p_p_f_p_void__void.getCPtr(free_func));
  }

  public static int SDL_SetMemoryFunctions(SWIGTYPE_p_f_size_t__p_void malloc_func, SWIGTYPE_p_f_size_t_size_t__p_void calloc_func, SWIGTYPE_p_f_p_void_size_t__p_void realloc_func, SWIGTYPE_p_f_p_void__void free_func) {
    return sdl2javaJNI.SDL_SetMemoryFunctions(SWIGTYPE_p_f_size_t__p_void.getCPtr(malloc_func), SWIGTYPE_p_f_size_t_size_t__p_void.getCPtr(calloc_func), SWIGTYPE_p_f_p_void_size_t__p_void.getCPtr(realloc_func), SWIGTYPE_p_f_p_void__void.getCPtr(free_func));
  }

  public static int SDL_GetNumAllocations() {
    return sdl2javaJNI.SDL_GetNumAllocations();
  }

  public static String SDL_getenv(String name) {
    return sdl2javaJNI.SDL_getenv(name);
  }

  public static int SDL_setenv(String name, String value, int overwrite) {
    return sdl2javaJNI.SDL_setenv(name, value, overwrite);
  }

  public static void SDL_qsort(SWIGTYPE_p_void base, long nmemb, long size, SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int compare) {
    sdl2javaJNI.SDL_qsort(SWIGTYPE_p_void.getCPtr(base), nmemb, size, SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int.getCPtr(compare));
  }

  public static SWIGTYPE_p_void SDL_bsearch(SWIGTYPE_p_void key, SWIGTYPE_p_void base, long nmemb, long size, SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int compare) {
    long cPtr = sdl2javaJNI.SDL_bsearch(SWIGTYPE_p_void.getCPtr(key), SWIGTYPE_p_void.getCPtr(base), nmemb, size, SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int.getCPtr(compare));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_abs(int x) {
    return sdl2javaJNI.SDL_abs(x);
  }

  public static int SDL_isalpha(int x) {
    return sdl2javaJNI.SDL_isalpha(x);
  }

  public static int SDL_isalnum(int x) {
    return sdl2javaJNI.SDL_isalnum(x);
  }

  public static int SDL_isblank(int x) {
    return sdl2javaJNI.SDL_isblank(x);
  }

  public static int SDL_iscntrl(int x) {
    return sdl2javaJNI.SDL_iscntrl(x);
  }

  public static int SDL_isdigit(int x) {
    return sdl2javaJNI.SDL_isdigit(x);
  }

  public static int SDL_isxdigit(int x) {
    return sdl2javaJNI.SDL_isxdigit(x);
  }

  public static int SDL_ispunct(int x) {
    return sdl2javaJNI.SDL_ispunct(x);
  }

  public static int SDL_isspace(int x) {
    return sdl2javaJNI.SDL_isspace(x);
  }

  public static int SDL_isupper(int x) {
    return sdl2javaJNI.SDL_isupper(x);
  }

  public static int SDL_islower(int x) {
    return sdl2javaJNI.SDL_islower(x);
  }

  public static int SDL_isprint(int x) {
    return sdl2javaJNI.SDL_isprint(x);
  }

  public static int SDL_isgraph(int x) {
    return sdl2javaJNI.SDL_isgraph(x);
  }

  public static int SDL_toupper(int x) {
    return sdl2javaJNI.SDL_toupper(x);
  }

  public static int SDL_tolower(int x) {
    return sdl2javaJNI.SDL_tolower(x);
  }

  public static SWIGTYPE_p_uint16_t SDL_crc16(SWIGTYPE_p_uint16_t crc, SWIGTYPE_p_void data, long len) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_crc16(SWIGTYPE_p_uint16_t.getCPtr(crc), SWIGTYPE_p_void.getCPtr(data), len), true);
  }

  public static SWIGTYPE_p_uint32_t SDL_crc32(SWIGTYPE_p_uint32_t crc, SWIGTYPE_p_void data, long len) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_crc32(SWIGTYPE_p_uint32_t.getCPtr(crc), SWIGTYPE_p_void.getCPtr(data), len), true);
  }

  public static SWIGTYPE_p_void SDL_memset(SWIGTYPE_p_void dst, int c, long len) {
    long cPtr = sdl2javaJNI.SDL_memset(SWIGTYPE_p_void.getCPtr(dst), c, len);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_memset4(SWIGTYPE_p_void dst, SWIGTYPE_p_uint32_t val, long dwords) {
    sdl2javaJNI.SDL_memset4(SWIGTYPE_p_void.getCPtr(dst), SWIGTYPE_p_uint32_t.getCPtr(val), dwords);
  }

  public static SWIGTYPE_p_void SDL_memcpy(SWIGTYPE_p_void dst, SWIGTYPE_p_void src, long len) {
    long cPtr = sdl2javaJNI.SDL_memcpy(SWIGTYPE_p_void.getCPtr(dst), SWIGTYPE_p_void.getCPtr(src), len);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_memmove(SWIGTYPE_p_void dst, SWIGTYPE_p_void src, long len) {
    long cPtr = sdl2javaJNI.SDL_memmove(SWIGTYPE_p_void.getCPtr(dst), SWIGTYPE_p_void.getCPtr(src), len);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_memcmp(SWIGTYPE_p_void s1, SWIGTYPE_p_void s2, long len) {
    return sdl2javaJNI.SDL_memcmp(SWIGTYPE_p_void.getCPtr(s1), SWIGTYPE_p_void.getCPtr(s2), len);
  }

  public static long SDL_wcslen(SWIGTYPE_p_wchar_t wstr) {
    return sdl2javaJNI.SDL_wcslen(SWIGTYPE_p_wchar_t.getCPtr(wstr));
  }

  public static long SDL_wcslcpy(SWIGTYPE_p_wchar_t dst, SWIGTYPE_p_wchar_t src, long maxlen) {
    return sdl2javaJNI.SDL_wcslcpy(SWIGTYPE_p_wchar_t.getCPtr(dst), SWIGTYPE_p_wchar_t.getCPtr(src), maxlen);
  }

  public static long SDL_wcslcat(SWIGTYPE_p_wchar_t dst, SWIGTYPE_p_wchar_t src, long maxlen) {
    return sdl2javaJNI.SDL_wcslcat(SWIGTYPE_p_wchar_t.getCPtr(dst), SWIGTYPE_p_wchar_t.getCPtr(src), maxlen);
  }

  public static SWIGTYPE_p_wchar_t SDL_wcsdup(SWIGTYPE_p_wchar_t wstr) {
    long cPtr = sdl2javaJNI.SDL_wcsdup(SWIGTYPE_p_wchar_t.getCPtr(wstr));
    return (cPtr == 0) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
  }

  public static SWIGTYPE_p_wchar_t SDL_wcsstr(SWIGTYPE_p_wchar_t haystack, SWIGTYPE_p_wchar_t needle) {
    long cPtr = sdl2javaJNI.SDL_wcsstr(SWIGTYPE_p_wchar_t.getCPtr(haystack), SWIGTYPE_p_wchar_t.getCPtr(needle));
    return (cPtr == 0) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
  }

  public static int SDL_wcscmp(SWIGTYPE_p_wchar_t str1, SWIGTYPE_p_wchar_t str2) {
    return sdl2javaJNI.SDL_wcscmp(SWIGTYPE_p_wchar_t.getCPtr(str1), SWIGTYPE_p_wchar_t.getCPtr(str2));
  }

  public static int SDL_wcsncmp(SWIGTYPE_p_wchar_t str1, SWIGTYPE_p_wchar_t str2, long maxlen) {
    return sdl2javaJNI.SDL_wcsncmp(SWIGTYPE_p_wchar_t.getCPtr(str1), SWIGTYPE_p_wchar_t.getCPtr(str2), maxlen);
  }

  public static int SDL_wcscasecmp(SWIGTYPE_p_wchar_t str1, SWIGTYPE_p_wchar_t str2) {
    return sdl2javaJNI.SDL_wcscasecmp(SWIGTYPE_p_wchar_t.getCPtr(str1), SWIGTYPE_p_wchar_t.getCPtr(str2));
  }

  public static int SDL_wcsncasecmp(SWIGTYPE_p_wchar_t str1, SWIGTYPE_p_wchar_t str2, long len) {
    return sdl2javaJNI.SDL_wcsncasecmp(SWIGTYPE_p_wchar_t.getCPtr(str1), SWIGTYPE_p_wchar_t.getCPtr(str2), len);
  }

  public static long SDL_strlen(String str) {
    return sdl2javaJNI.SDL_strlen(str);
  }

  public static long SDL_strlcpy(String dst, String src, long maxlen) {
    return sdl2javaJNI.SDL_strlcpy(dst, src, maxlen);
  }

  public static long SDL_utf8strlcpy(String dst, String src, long dst_bytes) {
    return sdl2javaJNI.SDL_utf8strlcpy(dst, src, dst_bytes);
  }

  public static long SDL_strlcat(String dst, String src, long maxlen) {
    return sdl2javaJNI.SDL_strlcat(dst, src, maxlen);
  }

  public static String SDL_strdup(String str) {
    return sdl2javaJNI.SDL_strdup(str);
  }

  public static String SDL_strrev(String str) {
    return sdl2javaJNI.SDL_strrev(str);
  }

  public static String SDL_strupr(String str) {
    return sdl2javaJNI.SDL_strupr(str);
  }

  public static String SDL_strlwr(String str) {
    return sdl2javaJNI.SDL_strlwr(str);
  }

  public static String SDL_strchr(String str, int c) {
    return sdl2javaJNI.SDL_strchr(str, c);
  }

  public static String SDL_strrchr(String str, int c) {
    return sdl2javaJNI.SDL_strrchr(str, c);
  }

  public static String SDL_strstr(String haystack, String needle) {
    return sdl2javaJNI.SDL_strstr(haystack, needle);
  }

  public static String SDL_strcasestr(String haystack, String needle) {
    return sdl2javaJNI.SDL_strcasestr(haystack, needle);
  }

  public static String SDL_strtokr(String s1, String s2, SWIGTYPE_p_p_char saveptr) {
    return sdl2javaJNI.SDL_strtokr(s1, s2, SWIGTYPE_p_p_char.getCPtr(saveptr));
  }

  public static long SDL_utf8strlen(String str) {
    return sdl2javaJNI.SDL_utf8strlen(str);
  }

  public static long SDL_utf8strnlen(String str, long bytes) {
    return sdl2javaJNI.SDL_utf8strnlen(str, bytes);
  }

  public static String SDL_itoa(int value, String str, int radix) {
    return sdl2javaJNI.SDL_itoa(value, str, radix);
  }

  public static String SDL_uitoa(long value, String str, int radix) {
    return sdl2javaJNI.SDL_uitoa(value, str, radix);
  }

  public static String SDL_ltoa(int value, String str, int radix) {
    return sdl2javaJNI.SDL_ltoa(value, str, radix);
  }

  public static String SDL_ultoa(long value, String str, int radix) {
    return sdl2javaJNI.SDL_ultoa(value, str, radix);
  }

  public static String SDL_lltoa(SWIGTYPE_p_int64_t value, String str, int radix) {
    return sdl2javaJNI.SDL_lltoa(SWIGTYPE_p_int64_t.getCPtr(value), str, radix);
  }

  public static String SDL_ulltoa(SWIGTYPE_p_uint64_t value, String str, int radix) {
    return sdl2javaJNI.SDL_ulltoa(SWIGTYPE_p_uint64_t.getCPtr(value), str, radix);
  }

  public static int SDL_atoi(String str) {
    return sdl2javaJNI.SDL_atoi(str);
  }

  public static double SDL_atof(String str) {
    return sdl2javaJNI.SDL_atof(str);
  }

  public static int SDL_strtol(String str, SWIGTYPE_p_p_char endp, int base) {
    return sdl2javaJNI.SDL_strtol(str, SWIGTYPE_p_p_char.getCPtr(endp), base);
  }

  public static long SDL_strtoul(String str, SWIGTYPE_p_p_char endp, int base) {
    return sdl2javaJNI.SDL_strtoul(str, SWIGTYPE_p_p_char.getCPtr(endp), base);
  }

  public static SWIGTYPE_p_int64_t SDL_strtoll(String str, SWIGTYPE_p_p_char endp, int base) {
    return new SWIGTYPE_p_int64_t(sdl2javaJNI.SDL_strtoll(str, SWIGTYPE_p_p_char.getCPtr(endp), base), true);
  }

  public static SWIGTYPE_p_uint64_t SDL_strtoull(String str, SWIGTYPE_p_p_char endp, int base) {
    return new SWIGTYPE_p_uint64_t(sdl2javaJNI.SDL_strtoull(str, SWIGTYPE_p_p_char.getCPtr(endp), base), true);
  }

  public static double SDL_strtod(String str, SWIGTYPE_p_p_char endp) {
    return sdl2javaJNI.SDL_strtod(str, SWIGTYPE_p_p_char.getCPtr(endp));
  }

  public static int SDL_strcmp(String str1, String str2) {
    return sdl2javaJNI.SDL_strcmp(str1, str2);
  }

  public static int SDL_strncmp(String str1, String str2, long maxlen) {
    return sdl2javaJNI.SDL_strncmp(str1, str2, maxlen);
  }

  public static int SDL_strcasecmp(String str1, String str2) {
    return sdl2javaJNI.SDL_strcasecmp(str1, str2);
  }

  public static int SDL_strncasecmp(String str1, String str2, long len) {
    return sdl2javaJNI.SDL_strncasecmp(str1, str2, len);
  }

  public static int SDL_sscanf(String text, String fmt) {
    return sdl2javaJNI.SDL_sscanf(text, fmt);
  }

  public static int SDL_vsscanf(String text, String fmt, SWIGTYPE_p_va_list ap) {
    return sdl2javaJNI.SDL_vsscanf(text, fmt, SWIGTYPE_p_va_list.getCPtr(ap));
  }

  public static int SDL_snprintf(String text, long maxlen, String fmt) {
    return sdl2javaJNI.SDL_snprintf(text, maxlen, fmt);
  }

  public static int SDL_asprintf(SWIGTYPE_p_p_char strp, String fmt) {
    return sdl2javaJNI.SDL_asprintf(SWIGTYPE_p_p_char.getCPtr(strp), fmt);
  }

  public static int SDL_vasprintf(SWIGTYPE_p_p_char strp, String fmt, SWIGTYPE_p_va_list ap) {
    return sdl2javaJNI.SDL_vasprintf(SWIGTYPE_p_p_char.getCPtr(strp), fmt, SWIGTYPE_p_va_list.getCPtr(ap));
  }

  public static double SDL_acos(double x) {
    return sdl2javaJNI.SDL_acos(x);
  }

  public static float SDL_acosf(float x) {
    return sdl2javaJNI.SDL_acosf(x);
  }

  public static double SDL_asin(double x) {
    return sdl2javaJNI.SDL_asin(x);
  }

  public static float SDL_asinf(float x) {
    return sdl2javaJNI.SDL_asinf(x);
  }

  public static double SDL_atan(double x) {
    return sdl2javaJNI.SDL_atan(x);
  }

  public static float SDL_atanf(float x) {
    return sdl2javaJNI.SDL_atanf(x);
  }

  public static double SDL_atan2(double y, double x) {
    return sdl2javaJNI.SDL_atan2(y, x);
  }

  public static float SDL_atan2f(float y, float x) {
    return sdl2javaJNI.SDL_atan2f(y, x);
  }

  public static double SDL_ceil(double x) {
    return sdl2javaJNI.SDL_ceil(x);
  }

  public static float SDL_ceilf(float x) {
    return sdl2javaJNI.SDL_ceilf(x);
  }

  public static double SDL_copysign(double x, double y) {
    return sdl2javaJNI.SDL_copysign(x, y);
  }

  public static float SDL_copysignf(float x, float y) {
    return sdl2javaJNI.SDL_copysignf(x, y);
  }

  public static double SDL_cos(double x) {
    return sdl2javaJNI.SDL_cos(x);
  }

  public static float SDL_cosf(float x) {
    return sdl2javaJNI.SDL_cosf(x);
  }

  public static double SDL_exp(double x) {
    return sdl2javaJNI.SDL_exp(x);
  }

  public static float SDL_expf(float x) {
    return sdl2javaJNI.SDL_expf(x);
  }

  public static double SDL_fabs(double x) {
    return sdl2javaJNI.SDL_fabs(x);
  }

  public static float SDL_fabsf(float x) {
    return sdl2javaJNI.SDL_fabsf(x);
  }

  public static double SDL_floor(double x) {
    return sdl2javaJNI.SDL_floor(x);
  }

  public static float SDL_floorf(float x) {
    return sdl2javaJNI.SDL_floorf(x);
  }

  public static double SDL_trunc(double x) {
    return sdl2javaJNI.SDL_trunc(x);
  }

  public static float SDL_truncf(float x) {
    return sdl2javaJNI.SDL_truncf(x);
  }

  public static double SDL_fmod(double x, double y) {
    return sdl2javaJNI.SDL_fmod(x, y);
  }

  public static float SDL_fmodf(float x, float y) {
    return sdl2javaJNI.SDL_fmodf(x, y);
  }

  public static double SDL_log(double x) {
    return sdl2javaJNI.SDL_log(x);
  }

  public static float SDL_logf(float x) {
    return sdl2javaJNI.SDL_logf(x);
  }

  public static double SDL_log10(double x) {
    return sdl2javaJNI.SDL_log10(x);
  }

  public static float SDL_log10f(float x) {
    return sdl2javaJNI.SDL_log10f(x);
  }

  public static double SDL_pow(double x, double y) {
    return sdl2javaJNI.SDL_pow(x, y);
  }

  public static float SDL_powf(float x, float y) {
    return sdl2javaJNI.SDL_powf(x, y);
  }

  public static double SDL_round(double x) {
    return sdl2javaJNI.SDL_round(x);
  }

  public static float SDL_roundf(float x) {
    return sdl2javaJNI.SDL_roundf(x);
  }

  public static int SDL_lround(double x) {
    return sdl2javaJNI.SDL_lround(x);
  }

  public static int SDL_lroundf(float x) {
    return sdl2javaJNI.SDL_lroundf(x);
  }

  public static double SDL_scalbn(double x, int n) {
    return sdl2javaJNI.SDL_scalbn(x, n);
  }

  public static float SDL_scalbnf(float x, int n) {
    return sdl2javaJNI.SDL_scalbnf(x, n);
  }

  public static double SDL_sin(double x) {
    return sdl2javaJNI.SDL_sin(x);
  }

  public static float SDL_sinf(float x) {
    return sdl2javaJNI.SDL_sinf(x);
  }

  public static double SDL_sqrt(double x) {
    return sdl2javaJNI.SDL_sqrt(x);
  }

  public static float SDL_sqrtf(float x) {
    return sdl2javaJNI.SDL_sqrtf(x);
  }

  public static double SDL_tan(double x) {
    return sdl2javaJNI.SDL_tan(x);
  }

  public static float SDL_tanf(float x) {
    return sdl2javaJNI.SDL_tanf(x);
  }

  public static SWIGTYPE_p__SDL_iconv_t SDL_iconv_open(String tocode, String fromcode) {
    long cPtr = sdl2javaJNI.SDL_iconv_open(tocode, fromcode);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_iconv_t(cPtr, false);
  }

  public static int SDL_iconv_close(SWIGTYPE_p__SDL_iconv_t cd) {
    return sdl2javaJNI.SDL_iconv_close(SWIGTYPE_p__SDL_iconv_t.getCPtr(cd));
  }

  public static long SDL_iconv(SWIGTYPE_p__SDL_iconv_t cd, SWIGTYPE_p_p_char inbuf, SWIGTYPE_p_size_t inbytesleft, SWIGTYPE_p_p_char outbuf, SWIGTYPE_p_size_t outbytesleft) {
    return sdl2javaJNI.SDL_iconv(SWIGTYPE_p__SDL_iconv_t.getCPtr(cd), SWIGTYPE_p_p_char.getCPtr(inbuf), SWIGTYPE_p_size_t.getCPtr(inbytesleft), SWIGTYPE_p_p_char.getCPtr(outbuf), SWIGTYPE_p_size_t.getCPtr(outbytesleft));
  }

  public static String SDL_iconv_string(String tocode, String fromcode, String inbuf, long inbytesleft) {
    return sdl2javaJNI.SDL_iconv_string(tocode, fromcode, inbuf, inbytesleft);
  }

  public static SWIGTYPE_p_void SDL_memcpy4(SWIGTYPE_p_void dst, SWIGTYPE_p_void src, long dwords) {
    long cPtr = sdl2javaJNI.SDL_memcpy4(SWIGTYPE_p_void.getCPtr(dst), SWIGTYPE_p_void.getCPtr(src), dwords);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_size_mul_overflow(long a, long b, SWIGTYPE_p_size_t ret) {
    return sdl2javaJNI.SDL_size_mul_overflow(a, b, SWIGTYPE_p_size_t.getCPtr(ret));
  }

  public static int SDL_size_add_overflow(long a, long b, SWIGTYPE_p_size_t ret) {
    return sdl2javaJNI.SDL_size_add_overflow(a, b, SWIGTYPE_p_size_t.getCPtr(ret));
  }

  public static int SDL_MostSignificantBitIndex32(SWIGTYPE_p_uint32_t x) {
    return sdl2javaJNI.SDL_MostSignificantBitIndex32(SWIGTYPE_p_uint32_t.getCPtr(x));
  }

  public static SDL_bool SDL_HasExactlyOneBitSet32(SWIGTYPE_p_uint32_t x) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasExactlyOneBitSet32(SWIGTYPE_p_uint32_t.getCPtr(x)));
  }

  public static SDL_AssertState SDL_ReportAssertion(SDL_AssertData arg0, String arg1, String arg2, int arg3) {
    return SDL_AssertState.swigToEnum(sdl2javaJNI.SDL_ReportAssertion(SDL_AssertData.getCPtr(arg0), arg0, arg1, arg2, arg3));
  }

  public static void SDL_SetAssertionHandler(SWIGTYPE_p_f_p_q_const__struct_SDL_AssertData_p_void__SDL_AssertState handler, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_SetAssertionHandler(SWIGTYPE_p_f_p_q_const__struct_SDL_AssertData_p_void__SDL_AssertState.getCPtr(handler), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static SWIGTYPE_p_f_p_q_const__struct_SDL_AssertData_p_void__SDL_AssertState SDL_GetDefaultAssertionHandler() {
    long cPtr = sdl2javaJNI.SDL_GetDefaultAssertionHandler();
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_q_const__struct_SDL_AssertData_p_void__SDL_AssertState(cPtr, false);
  }

  public static SWIGTYPE_p_f_p_q_const__struct_SDL_AssertData_p_void__SDL_AssertState SDL_GetAssertionHandler(SWIGTYPE_p_p_void puserdata) {
    long cPtr = sdl2javaJNI.SDL_GetAssertionHandler(SWIGTYPE_p_p_void.getCPtr(puserdata));
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_q_const__struct_SDL_AssertData_p_void__SDL_AssertState(cPtr, false);
  }

  public static SDL_AssertData SDL_GetAssertionReport() {
    long cPtr = sdl2javaJNI.SDL_GetAssertionReport();
    return (cPtr == 0) ? null : new SDL_AssertData(cPtr, false);
  }

  public static void SDL_ResetAssertionReport() {
    sdl2javaJNI.SDL_ResetAssertionReport();
  }

  public static SDL_bool SDL_AtomicTryLock(SWIGTYPE_p_int lock) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_AtomicTryLock(SWIGTYPE_p_int.getCPtr(lock)));
  }

  public static void SDL_AtomicLock(SWIGTYPE_p_int lock) {
    sdl2javaJNI.SDL_AtomicLock(SWIGTYPE_p_int.getCPtr(lock));
  }

  public static void SDL_AtomicUnlock(SWIGTYPE_p_int lock) {
    sdl2javaJNI.SDL_AtomicUnlock(SWIGTYPE_p_int.getCPtr(lock));
  }

  public static void SDL_MemoryBarrierReleaseFunction() {
    sdl2javaJNI.SDL_MemoryBarrierReleaseFunction();
  }

  public static void SDL_MemoryBarrierAcquireFunction() {
    sdl2javaJNI.SDL_MemoryBarrierAcquireFunction();
  }

  public static SDL_bool SDL_AtomicCAS(SDL_atomic_t a, int oldval, int newval) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_AtomicCAS(SDL_atomic_t.getCPtr(a), a, oldval, newval));
  }

  public static int SDL_AtomicSet(SDL_atomic_t a, int v) {
    return sdl2javaJNI.SDL_AtomicSet(SDL_atomic_t.getCPtr(a), a, v);
  }

  public static int SDL_AtomicGet(SDL_atomic_t a) {
    return sdl2javaJNI.SDL_AtomicGet(SDL_atomic_t.getCPtr(a), a);
  }

  public static int SDL_AtomicAdd(SDL_atomic_t a, int v) {
    return sdl2javaJNI.SDL_AtomicAdd(SDL_atomic_t.getCPtr(a), a, v);
  }

  public static SDL_bool SDL_AtomicCASPtr(SWIGTYPE_p_p_void a, SWIGTYPE_p_void oldval, SWIGTYPE_p_void newval) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_AtomicCASPtr(SWIGTYPE_p_p_void.getCPtr(a), SWIGTYPE_p_void.getCPtr(oldval), SWIGTYPE_p_void.getCPtr(newval)));
  }

  public static SWIGTYPE_p_void SDL_AtomicSetPtr(SWIGTYPE_p_p_void a, SWIGTYPE_p_void v) {
    long cPtr = sdl2javaJNI.SDL_AtomicSetPtr(SWIGTYPE_p_p_void.getCPtr(a), SWIGTYPE_p_void.getCPtr(v));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_AtomicGetPtr(SWIGTYPE_p_p_void a) {
    long cPtr = sdl2javaJNI.SDL_AtomicGetPtr(SWIGTYPE_p_p_void.getCPtr(a));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SDL_bool SDL_PointInRect(SDL_Point p, SDL_Rect r) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_PointInRect(SDL_Point.getCPtr(p), p, SDL_Rect.getCPtr(r), r));
  }

  public static SDL_bool SDL_RectEmpty(SDL_Rect r) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RectEmpty(SDL_Rect.getCPtr(r), r));
  }

  public static SDL_bool SDL_RectEquals(SDL_Rect a, SDL_Rect b) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RectEquals(SDL_Rect.getCPtr(a), a, SDL_Rect.getCPtr(b), b));
  }

  public static SDL_bool SDL_HasIntersection(SDL_Rect A, SDL_Rect B) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasIntersection(SDL_Rect.getCPtr(A), A, SDL_Rect.getCPtr(B), B));
  }

  public static SDL_bool SDL_IntersectRect(SDL_Rect A, SDL_Rect B, SDL_Rect result) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IntersectRect(SDL_Rect.getCPtr(A), A, SDL_Rect.getCPtr(B), B, SDL_Rect.getCPtr(result), result));
  }

  public static void SDL_UnionRect(SDL_Rect A, SDL_Rect B, SDL_Rect result) {
    sdl2javaJNI.SDL_UnionRect(SDL_Rect.getCPtr(A), A, SDL_Rect.getCPtr(B), B, SDL_Rect.getCPtr(result), result);
  }

  public static SDL_bool SDL_EnclosePoints(SDL_Point points, int count, SDL_Rect clip, SDL_Rect result) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_EnclosePoints(SDL_Point.getCPtr(points), points, count, SDL_Rect.getCPtr(clip), clip, SDL_Rect.getCPtr(result), result));
  }

  public static SDL_bool SDL_IntersectRectAndLine(SDL_Rect rect, SWIGTYPE_p_int X1, SWIGTYPE_p_int Y1, SWIGTYPE_p_int X2, SWIGTYPE_p_int Y2) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IntersectRectAndLine(SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_int.getCPtr(X1), SWIGTYPE_p_int.getCPtr(Y1), SWIGTYPE_p_int.getCPtr(X2), SWIGTYPE_p_int.getCPtr(Y2)));
  }

  public static SDL_bool SDL_PointInFRect(SDL_FPoint p, SDL_FRect r) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_PointInFRect(SDL_FPoint.getCPtr(p), p, SDL_FRect.getCPtr(r), r));
  }

  public static SDL_bool SDL_FRectEmpty(SDL_FRect r) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_FRectEmpty(SDL_FRect.getCPtr(r), r));
  }

  public static SDL_bool SDL_FRectEqualsEpsilon(SDL_FRect a, SDL_FRect b, float epsilon) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_FRectEqualsEpsilon(SDL_FRect.getCPtr(a), a, SDL_FRect.getCPtr(b), b, epsilon));
  }

  public static SDL_bool SDL_FRectEquals(SDL_FRect a, SDL_FRect b) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_FRectEquals(SDL_FRect.getCPtr(a), a, SDL_FRect.getCPtr(b), b));
  }

  public static SDL_bool SDL_HasIntersectionF(SDL_FRect A, SDL_FRect B) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasIntersectionF(SDL_FRect.getCPtr(A), A, SDL_FRect.getCPtr(B), B));
  }

  public static SDL_bool SDL_IntersectFRect(SDL_FRect A, SDL_FRect B, SDL_FRect result) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IntersectFRect(SDL_FRect.getCPtr(A), A, SDL_FRect.getCPtr(B), B, SDL_FRect.getCPtr(result), result));
  }

  public static void SDL_UnionFRect(SDL_FRect A, SDL_FRect B, SDL_FRect result) {
    sdl2javaJNI.SDL_UnionFRect(SDL_FRect.getCPtr(A), A, SDL_FRect.getCPtr(B), B, SDL_FRect.getCPtr(result), result);
  }

  public static SDL_bool SDL_EncloseFPoints(SDL_FPoint points, int count, SDL_FRect clip, SDL_FRect result) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_EncloseFPoints(SDL_FPoint.getCPtr(points), points, count, SDL_FRect.getCPtr(clip), clip, SDL_FRect.getCPtr(result), result));
  }

  public static SDL_bool SDL_IntersectFRectAndLine(SDL_FRect rect, SWIGTYPE_p_float X1, SWIGTYPE_p_float Y1, SWIGTYPE_p_float X2, SWIGTYPE_p_float Y2) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IntersectFRectAndLine(SDL_FRect.getCPtr(rect), rect, SWIGTYPE_p_float.getCPtr(X1), SWIGTYPE_p_float.getCPtr(Y1), SWIGTYPE_p_float.getCPtr(X2), SWIGTYPE_p_float.getCPtr(Y2)));
  }

  public static int SDL_GetNumAudioDrivers() {
    return sdl2javaJNI.SDL_GetNumAudioDrivers();
  }

  public static String SDL_GetAudioDriver(int index) {
    return sdl2javaJNI.SDL_GetAudioDriver(index);
  }

  public static int SDL_AudioInit(String driver_name) {
    return sdl2javaJNI.SDL_AudioInit(driver_name);
  }

  public static void SDL_AudioQuit() {
    sdl2javaJNI.SDL_AudioQuit();
  }

  public static String SDL_GetCurrentAudioDriver() {
    return sdl2javaJNI.SDL_GetCurrentAudioDriver();
  }

  public static int SDL_OpenAudio(SDL_AudioSpec desired, SDL_AudioSpec obtained) {
    return sdl2javaJNI.SDL_OpenAudio(SDL_AudioSpec.getCPtr(desired), desired, SDL_AudioSpec.getCPtr(obtained), obtained);
  }

  public static int SDL_GetNumAudioDevices(int iscapture) {
    return sdl2javaJNI.SDL_GetNumAudioDevices(iscapture);
  }

  public static String SDL_GetAudioDeviceName(int index, int iscapture) {
    return sdl2javaJNI.SDL_GetAudioDeviceName(index, iscapture);
  }

  public static int SDL_GetAudioDeviceSpec(int index, int iscapture, SDL_AudioSpec spec) {
    return sdl2javaJNI.SDL_GetAudioDeviceSpec(index, iscapture, SDL_AudioSpec.getCPtr(spec), spec);
  }

  public static int SDL_GetDefaultAudioInfo(SWIGTYPE_p_p_char name, SDL_AudioSpec spec, int iscapture) {
    return sdl2javaJNI.SDL_GetDefaultAudioInfo(SWIGTYPE_p_p_char.getCPtr(name), SDL_AudioSpec.getCPtr(spec), spec, iscapture);
  }

  public static SWIGTYPE_p_uint32_t SDL_OpenAudioDevice(String device, int iscapture, SDL_AudioSpec desired, SDL_AudioSpec obtained, int allowed_changes) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_OpenAudioDevice(device, iscapture, SDL_AudioSpec.getCPtr(desired), desired, SDL_AudioSpec.getCPtr(obtained), obtained, allowed_changes), true);
  }

  public static SDL_AudioStatus SDL_GetAudioStatus() {
    return SDL_AudioStatus.swigToEnum(sdl2javaJNI.SDL_GetAudioStatus());
  }

  public static SDL_AudioStatus SDL_GetAudioDeviceStatus(SWIGTYPE_p_uint32_t dev) {
    return SDL_AudioStatus.swigToEnum(sdl2javaJNI.SDL_GetAudioDeviceStatus(SWIGTYPE_p_uint32_t.getCPtr(dev)));
  }

  public static void SDL_PauseAudio(int pause_on) {
    sdl2javaJNI.SDL_PauseAudio(pause_on);
  }

  public static void SDL_PauseAudioDevice(SWIGTYPE_p_uint32_t dev, int pause_on) {
    sdl2javaJNI.SDL_PauseAudioDevice(SWIGTYPE_p_uint32_t.getCPtr(dev), pause_on);
  }

  public static SDL_AudioSpec SDL_LoadWAV_RW(SDL_RWops src, int freesrc, SDL_AudioSpec spec, SWIGTYPE_p_p_uint8_t audio_buf, SWIGTYPE_p_uint32_t audio_len) {
    long cPtr = sdl2javaJNI.SDL_LoadWAV_RW(SDL_RWops.getCPtr(src), src, freesrc, SDL_AudioSpec.getCPtr(spec), spec, SWIGTYPE_p_p_uint8_t.getCPtr(audio_buf), SWIGTYPE_p_uint32_t.getCPtr(audio_len));
    return (cPtr == 0) ? null : new SDL_AudioSpec(cPtr, false);
  }

  public static void SDL_FreeWAV(SWIGTYPE_p_uint8_t audio_buf) {
    sdl2javaJNI.SDL_FreeWAV(SWIGTYPE_p_uint8_t.getCPtr(audio_buf));
  }

  public static int SDL_BuildAudioCVT(SDL_AudioCVT cvt, SWIGTYPE_p_uint16_t src_format, SWIGTYPE_p_uint8_t src_channels, int src_rate, SWIGTYPE_p_uint16_t dst_format, SWIGTYPE_p_uint8_t dst_channels, int dst_rate) {
    return sdl2javaJNI.SDL_BuildAudioCVT(SDL_AudioCVT.getCPtr(cvt), cvt, SWIGTYPE_p_uint16_t.getCPtr(src_format), SWIGTYPE_p_uint8_t.getCPtr(src_channels), src_rate, SWIGTYPE_p_uint16_t.getCPtr(dst_format), SWIGTYPE_p_uint8_t.getCPtr(dst_channels), dst_rate);
  }

  public static int SDL_ConvertAudio(SDL_AudioCVT cvt) {
    return sdl2javaJNI.SDL_ConvertAudio(SDL_AudioCVT.getCPtr(cvt), cvt);
  }

  public static SWIGTYPE_p__SDL_AudioStream SDL_NewAudioStream(SWIGTYPE_p_uint16_t src_format, SWIGTYPE_p_uint8_t src_channels, int src_rate, SWIGTYPE_p_uint16_t dst_format, SWIGTYPE_p_uint8_t dst_channels, int dst_rate) {
    long cPtr = sdl2javaJNI.SDL_NewAudioStream(SWIGTYPE_p_uint16_t.getCPtr(src_format), SWIGTYPE_p_uint8_t.getCPtr(src_channels), src_rate, SWIGTYPE_p_uint16_t.getCPtr(dst_format), SWIGTYPE_p_uint8_t.getCPtr(dst_channels), dst_rate);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_AudioStream(cPtr, false);
  }

  public static int SDL_AudioStreamPut(SWIGTYPE_p__SDL_AudioStream stream, SWIGTYPE_p_void buf, int len) {
    return sdl2javaJNI.SDL_AudioStreamPut(SWIGTYPE_p__SDL_AudioStream.getCPtr(stream), SWIGTYPE_p_void.getCPtr(buf), len);
  }

  public static int SDL_AudioStreamGet(SWIGTYPE_p__SDL_AudioStream stream, SWIGTYPE_p_void buf, int len) {
    return sdl2javaJNI.SDL_AudioStreamGet(SWIGTYPE_p__SDL_AudioStream.getCPtr(stream), SWIGTYPE_p_void.getCPtr(buf), len);
  }

  public static int SDL_AudioStreamAvailable(SWIGTYPE_p__SDL_AudioStream stream) {
    return sdl2javaJNI.SDL_AudioStreamAvailable(SWIGTYPE_p__SDL_AudioStream.getCPtr(stream));
  }

  public static int SDL_AudioStreamFlush(SWIGTYPE_p__SDL_AudioStream stream) {
    return sdl2javaJNI.SDL_AudioStreamFlush(SWIGTYPE_p__SDL_AudioStream.getCPtr(stream));
  }

  public static void SDL_AudioStreamClear(SWIGTYPE_p__SDL_AudioStream stream) {
    sdl2javaJNI.SDL_AudioStreamClear(SWIGTYPE_p__SDL_AudioStream.getCPtr(stream));
  }

  public static void SDL_FreeAudioStream(SWIGTYPE_p__SDL_AudioStream stream) {
    sdl2javaJNI.SDL_FreeAudioStream(SWIGTYPE_p__SDL_AudioStream.getCPtr(stream));
  }

  public static void SDL_MixAudio(SWIGTYPE_p_uint8_t dst, SWIGTYPE_p_uint8_t src, SWIGTYPE_p_uint32_t len, int volume) {
    sdl2javaJNI.SDL_MixAudio(SWIGTYPE_p_uint8_t.getCPtr(dst), SWIGTYPE_p_uint8_t.getCPtr(src), SWIGTYPE_p_uint32_t.getCPtr(len), volume);
  }

  public static void SDL_MixAudioFormat(SWIGTYPE_p_uint8_t dst, SWIGTYPE_p_uint8_t src, SWIGTYPE_p_uint16_t format, SWIGTYPE_p_uint32_t len, int volume) {
    sdl2javaJNI.SDL_MixAudioFormat(SWIGTYPE_p_uint8_t.getCPtr(dst), SWIGTYPE_p_uint8_t.getCPtr(src), SWIGTYPE_p_uint16_t.getCPtr(format), SWIGTYPE_p_uint32_t.getCPtr(len), volume);
  }

  public static int SDL_QueueAudio(SWIGTYPE_p_uint32_t dev, SWIGTYPE_p_void data, SWIGTYPE_p_uint32_t len) {
    return sdl2javaJNI.SDL_QueueAudio(SWIGTYPE_p_uint32_t.getCPtr(dev), SWIGTYPE_p_void.getCPtr(data), SWIGTYPE_p_uint32_t.getCPtr(len));
  }

  public static SWIGTYPE_p_uint32_t SDL_DequeueAudio(SWIGTYPE_p_uint32_t dev, SWIGTYPE_p_void data, SWIGTYPE_p_uint32_t len) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_DequeueAudio(SWIGTYPE_p_uint32_t.getCPtr(dev), SWIGTYPE_p_void.getCPtr(data), SWIGTYPE_p_uint32_t.getCPtr(len)), true);
  }

  public static SWIGTYPE_p_uint32_t SDL_GetQueuedAudioSize(SWIGTYPE_p_uint32_t dev) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_GetQueuedAudioSize(SWIGTYPE_p_uint32_t.getCPtr(dev)), true);
  }

  public static void SDL_ClearQueuedAudio(SWIGTYPE_p_uint32_t dev) {
    sdl2javaJNI.SDL_ClearQueuedAudio(SWIGTYPE_p_uint32_t.getCPtr(dev));
  }

  public static void SDL_LockAudio() {
    sdl2javaJNI.SDL_LockAudio();
  }

  public static void SDL_LockAudioDevice(SWIGTYPE_p_uint32_t dev) {
    sdl2javaJNI.SDL_LockAudioDevice(SWIGTYPE_p_uint32_t.getCPtr(dev));
  }

  public static void SDL_UnlockAudio() {
    sdl2javaJNI.SDL_UnlockAudio();
  }

  public static void SDL_UnlockAudioDevice(SWIGTYPE_p_uint32_t dev) {
    sdl2javaJNI.SDL_UnlockAudioDevice(SWIGTYPE_p_uint32_t.getCPtr(dev));
  }

  public static void SDL_CloseAudio() {
    sdl2javaJNI.SDL_CloseAudio();
  }

  public static void SDL_CloseAudioDevice(SWIGTYPE_p_uint32_t dev) {
    sdl2javaJNI.SDL_CloseAudioDevice(SWIGTYPE_p_uint32_t.getCPtr(dev));
  }

  public static int SDL_SetClipboardText(String text) {
    return sdl2javaJNI.SDL_SetClipboardText(text);
  }

  public static String SDL_GetClipboardText() {
    return sdl2javaJNI.SDL_GetClipboardText();
  }

  public static SDL_bool SDL_HasClipboardText() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasClipboardText());
  }

  public static int SDL_SetPrimarySelectionText(String text) {
    return sdl2javaJNI.SDL_SetPrimarySelectionText(text);
  }

  public static String SDL_GetPrimarySelectionText() {
    return sdl2javaJNI.SDL_GetPrimarySelectionText();
  }

  public static SDL_bool SDL_HasPrimarySelectionText() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasPrimarySelectionText());
  }

  public static int SDL_GetCPUCount() {
    return sdl2javaJNI.SDL_GetCPUCount();
  }

  public static int SDL_GetCPUCacheLineSize() {
    return sdl2javaJNI.SDL_GetCPUCacheLineSize();
  }

  public static SDL_bool SDL_HasRDTSC() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasRDTSC());
  }

  public static SDL_bool SDL_HasAltiVec() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasAltiVec());
  }

  public static SDL_bool SDL_HasMMX() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasMMX());
  }

  public static SDL_bool SDL_Has3DNow() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_Has3DNow());
  }

  public static SDL_bool SDL_HasSSE() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE());
  }

  public static SDL_bool SDL_HasSSE2() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE2());
  }

  public static SDL_bool SDL_HasSSE3() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE3());
  }

  public static SDL_bool SDL_HasSSE41() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE41());
  }

  public static SDL_bool SDL_HasSSE42() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSSE42());
  }

  public static SDL_bool SDL_HasAVX() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasAVX());
  }

  public static SDL_bool SDL_HasAVX2() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasAVX2());
  }

  public static SDL_bool SDL_HasAVX512F() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasAVX512F());
  }

  public static SDL_bool SDL_HasARMSIMD() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasARMSIMD());
  }

  public static SDL_bool SDL_HasNEON() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasNEON());
  }

  public static SDL_bool SDL_HasLSX() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasLSX());
  }

  public static SDL_bool SDL_HasLASX() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasLASX());
  }

  public static int SDL_GetSystemRAM() {
    return sdl2javaJNI.SDL_GetSystemRAM();
  }

  public static long SDL_SIMDGetAlignment() {
    return sdl2javaJNI.SDL_SIMDGetAlignment();
  }

  public static SWIGTYPE_p_void SDL_SIMDAlloc(long len) {
    long cPtr = sdl2javaJNI.SDL_SIMDAlloc(len);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_SIMDRealloc(SWIGTYPE_p_void mem, long len) {
    long cPtr = sdl2javaJNI.SDL_SIMDRealloc(SWIGTYPE_p_void.getCPtr(mem), len);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_SIMDFree(SWIGTYPE_p_void ptr) {
    sdl2javaJNI.SDL_SIMDFree(SWIGTYPE_p_void.getCPtr(ptr));
  }

  public static SWIGTYPE_p_uint16_t SDL_Swap16(SWIGTYPE_p_uint16_t x) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_Swap16(SWIGTYPE_p_uint16_t.getCPtr(x)), true);
  }

  public static SWIGTYPE_p_uint32_t SDL_Swap32(SWIGTYPE_p_uint32_t x) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_Swap32(SWIGTYPE_p_uint32_t.getCPtr(x)), true);
  }

  public static SWIGTYPE_p_uint64_t SDL_Swap64(SWIGTYPE_p_uint64_t x) {
    return new SWIGTYPE_p_uint64_t(sdl2javaJNI.SDL_Swap64(SWIGTYPE_p_uint64_t.getCPtr(x)), true);
  }

  public static float SDL_SwapFloat(float x) {
    return sdl2javaJNI.SDL_SwapFloat(x);
  }

  public static int SDL_SetError(String fmt) {
    return sdl2javaJNI.SDL_SetError(fmt);
  }

  public static String SDL_GetError() {
    return sdl2javaJNI.SDL_GetError();
  }

  public static String SDL_GetErrorMsg(String errstr, int maxlen) {
    return sdl2javaJNI.SDL_GetErrorMsg(errstr, maxlen);
  }

  public static void SDL_ClearError() {
    sdl2javaJNI.SDL_ClearError();
  }

  public static int SDL_Error(SDL_errorcode code) {
    return sdl2javaJNI.SDL_Error(code.swigValue());
  }

  public static void SDL_PumpEvents() {
    sdl2javaJNI.SDL_PumpEvents();
  }

  public static int SDL_PeepEvents(SDL_Event events, int numevents, SDL_eventaction action, SWIGTYPE_p_uint32_t minType, SWIGTYPE_p_uint32_t maxType) {
    return sdl2javaJNI.SDL_PeepEvents(SDL_Event.getCPtr(events), events, numevents, action.swigValue(), SWIGTYPE_p_uint32_t.getCPtr(minType), SWIGTYPE_p_uint32_t.getCPtr(maxType));
  }

  public static SDL_bool SDL_HasEvent(SWIGTYPE_p_uint32_t type) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasEvent(SWIGTYPE_p_uint32_t.getCPtr(type)));
  }

  public static SDL_bool SDL_HasEvents(SWIGTYPE_p_uint32_t minType, SWIGTYPE_p_uint32_t maxType) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasEvents(SWIGTYPE_p_uint32_t.getCPtr(minType), SWIGTYPE_p_uint32_t.getCPtr(maxType)));
  }

  public static void SDL_FlushEvent(SWIGTYPE_p_uint32_t type) {
    sdl2javaJNI.SDL_FlushEvent(SWIGTYPE_p_uint32_t.getCPtr(type));
  }

  public static void SDL_FlushEvents(SWIGTYPE_p_uint32_t minType, SWIGTYPE_p_uint32_t maxType) {
    sdl2javaJNI.SDL_FlushEvents(SWIGTYPE_p_uint32_t.getCPtr(minType), SWIGTYPE_p_uint32_t.getCPtr(maxType));
  }

  public static int SDL_PollEvent(SDL_Event event) {
    return sdl2javaJNI.SDL_PollEvent(SDL_Event.getCPtr(event), event);
  }

  public static int SDL_WaitEvent(SDL_Event event) {
    return sdl2javaJNI.SDL_WaitEvent(SDL_Event.getCPtr(event), event);
  }

  public static int SDL_WaitEventTimeout(SDL_Event event, int timeout) {
    return sdl2javaJNI.SDL_WaitEventTimeout(SDL_Event.getCPtr(event), event, timeout);
  }

  public static int SDL_PushEvent(SDL_Event event) {
    return sdl2javaJNI.SDL_PushEvent(SDL_Event.getCPtr(event), event);
  }

  public static void SDL_SetEventFilter(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_SetEventFilter(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static SDL_bool SDL_GetEventFilter(SWIGTYPE_p_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_p_void userdata) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GetEventFilter(SWIGTYPE_p_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public static void SDL_AddEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_AddEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_DelEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_DelEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_FilterEvents(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_FilterEvents(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static SWIGTYPE_p_uint8_t SDL_EventState(SWIGTYPE_p_uint32_t type, int state) {
    return new SWIGTYPE_p_uint8_t(sdl2javaJNI.SDL_EventState(SWIGTYPE_p_uint32_t.getCPtr(type), state), true);
  }

  public static SWIGTYPE_p_uint32_t SDL_RegisterEvents(int numevents) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_RegisterEvents(numevents), true);
  }

  public static SWIGTYPE_p_SDL_mutex SDL_CreateMutex() {
    long cPtr = sdl2javaJNI.SDL_CreateMutex();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_mutex(cPtr, false);
  }

  public static int SDL_LockMutex(SWIGTYPE_p_SDL_mutex mutex) {
    return sdl2javaJNI.SDL_LockMutex(SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static int SDL_TryLockMutex(SWIGTYPE_p_SDL_mutex mutex) {
    return sdl2javaJNI.SDL_TryLockMutex(SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static int SDL_UnlockMutex(SWIGTYPE_p_SDL_mutex mutex) {
    return sdl2javaJNI.SDL_UnlockMutex(SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static void SDL_DestroyMutex(SWIGTYPE_p_SDL_mutex mutex) {
    sdl2javaJNI.SDL_DestroyMutex(SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static SWIGTYPE_p_SDL_semaphore SDL_CreateSemaphore(SWIGTYPE_p_uint32_t initial_value) {
    long cPtr = sdl2javaJNI.SDL_CreateSemaphore(SWIGTYPE_p_uint32_t.getCPtr(initial_value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_semaphore(cPtr, false);
  }

  public static void SDL_DestroySemaphore(SWIGTYPE_p_SDL_semaphore sem) {
    sdl2javaJNI.SDL_DestroySemaphore(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static int SDL_SemWait(SWIGTYPE_p_SDL_semaphore sem) {
    return sdl2javaJNI.SDL_SemWait(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static int SDL_SemTryWait(SWIGTYPE_p_SDL_semaphore sem) {
    return sdl2javaJNI.SDL_SemTryWait(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static int SDL_SemWaitTimeout(SWIGTYPE_p_SDL_semaphore sem, SWIGTYPE_p_uint32_t timeout) {
    return sdl2javaJNI.SDL_SemWaitTimeout(SWIGTYPE_p_SDL_semaphore.getCPtr(sem), SWIGTYPE_p_uint32_t.getCPtr(timeout));
  }

  public static int SDL_SemPost(SWIGTYPE_p_SDL_semaphore sem) {
    return sdl2javaJNI.SDL_SemPost(SWIGTYPE_p_SDL_semaphore.getCPtr(sem));
  }

  public static SWIGTYPE_p_uint32_t SDL_SemValue(SWIGTYPE_p_SDL_semaphore sem) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_SemValue(SWIGTYPE_p_SDL_semaphore.getCPtr(sem)), true);
  }

  public static SWIGTYPE_p_SDL_cond SDL_CreateCond() {
    long cPtr = sdl2javaJNI.SDL_CreateCond();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_cond(cPtr, false);
  }

  public static void SDL_DestroyCond(SWIGTYPE_p_SDL_cond cond) {
    sdl2javaJNI.SDL_DestroyCond(SWIGTYPE_p_SDL_cond.getCPtr(cond));
  }

  public static int SDL_CondSignal(SWIGTYPE_p_SDL_cond cond) {
    return sdl2javaJNI.SDL_CondSignal(SWIGTYPE_p_SDL_cond.getCPtr(cond));
  }

  public static int SDL_CondBroadcast(SWIGTYPE_p_SDL_cond cond) {
    return sdl2javaJNI.SDL_CondBroadcast(SWIGTYPE_p_SDL_cond.getCPtr(cond));
  }

  public static int SDL_CondWait(SWIGTYPE_p_SDL_cond cond, SWIGTYPE_p_SDL_mutex mutex) {
    return sdl2javaJNI.SDL_CondWait(SWIGTYPE_p_SDL_cond.getCPtr(cond), SWIGTYPE_p_SDL_mutex.getCPtr(mutex));
  }

  public static int SDL_CondWaitTimeout(SWIGTYPE_p_SDL_cond cond, SWIGTYPE_p_SDL_mutex mutex, SWIGTYPE_p_uint32_t ms) {
    return sdl2javaJNI.SDL_CondWaitTimeout(SWIGTYPE_p_SDL_cond.getCPtr(cond), SWIGTYPE_p_SDL_mutex.getCPtr(mutex), SWIGTYPE_p_uint32_t.getCPtr(ms));
  }

  public static void SDL_LockJoysticks() {
    sdl2javaJNI.SDL_LockJoysticks();
  }

  public static void SDL_UnlockJoysticks() {
    sdl2javaJNI.SDL_UnlockJoysticks();
  }

  public static int SDL_NumJoysticks() {
    return sdl2javaJNI.SDL_NumJoysticks();
  }

  public static String SDL_JoystickNameForIndex(int device_index) {
    return sdl2javaJNI.SDL_JoystickNameForIndex(device_index);
  }

  public static String SDL_JoystickPathForIndex(int device_index) {
    return sdl2javaJNI.SDL_JoystickPathForIndex(device_index);
  }

  public static int SDL_JoystickGetDevicePlayerIndex(int device_index) {
    return sdl2javaJNI.SDL_JoystickGetDevicePlayerIndex(device_index);
  }

  public static SWIGTYPE_p_SDL_GUID SDL_JoystickGetDeviceGUID(int device_index) {
    return new SWIGTYPE_p_SDL_GUID(sdl2javaJNI.SDL_JoystickGetDeviceGUID(device_index), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_JoystickGetDeviceVendor(int device_index) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_JoystickGetDeviceVendor(device_index), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_JoystickGetDeviceProduct(int device_index) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_JoystickGetDeviceProduct(device_index), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_JoystickGetDeviceProductVersion(int device_index) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_JoystickGetDeviceProductVersion(device_index), true);
  }

  public static SDL_JoystickType SDL_JoystickGetDeviceType(int device_index) {
    return SDL_JoystickType.swigToEnum(sdl2javaJNI.SDL_JoystickGetDeviceType(device_index));
  }

  public static SWIGTYPE_p_int32_t SDL_JoystickGetDeviceInstanceID(int device_index) {
    return new SWIGTYPE_p_int32_t(sdl2javaJNI.SDL_JoystickGetDeviceInstanceID(device_index), true);
  }

  public static SWIGTYPE_p__SDL_Joystick SDL_JoystickOpen(int device_index) {
    long cPtr = sdl2javaJNI.SDL_JoystickOpen(device_index);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Joystick(cPtr, false);
  }

  public static SWIGTYPE_p__SDL_Joystick SDL_JoystickFromInstanceID(SWIGTYPE_p_int32_t instance_id) {
    long cPtr = sdl2javaJNI.SDL_JoystickFromInstanceID(SWIGTYPE_p_int32_t.getCPtr(instance_id));
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Joystick(cPtr, false);
  }

  public static SWIGTYPE_p__SDL_Joystick SDL_JoystickFromPlayerIndex(int player_index) {
    long cPtr = sdl2javaJNI.SDL_JoystickFromPlayerIndex(player_index);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Joystick(cPtr, false);
  }

  public static int SDL_JoystickAttachVirtual(SDL_JoystickType type, int naxes, int nbuttons, int nhats) {
    return sdl2javaJNI.SDL_JoystickAttachVirtual(type.swigValue(), naxes, nbuttons, nhats);
  }

  public static int SDL_JoystickAttachVirtualEx(SDL_VirtualJoystickDesc desc) {
    return sdl2javaJNI.SDL_JoystickAttachVirtualEx(SDL_VirtualJoystickDesc.getCPtr(desc), desc);
  }

  public static int SDL_JoystickDetachVirtual(int device_index) {
    return sdl2javaJNI.SDL_JoystickDetachVirtual(device_index);
  }

  public static SDL_bool SDL_JoystickIsVirtual(int device_index) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_JoystickIsVirtual(device_index));
  }

  public static int SDL_JoystickSetVirtualAxis(SWIGTYPE_p__SDL_Joystick joystick, int axis, SWIGTYPE_p_int16_t value) {
    return sdl2javaJNI.SDL_JoystickSetVirtualAxis(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), axis, SWIGTYPE_p_int16_t.getCPtr(value));
  }

  public static int SDL_JoystickSetVirtualButton(SWIGTYPE_p__SDL_Joystick joystick, int button, SWIGTYPE_p_uint8_t value) {
    return sdl2javaJNI.SDL_JoystickSetVirtualButton(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), button, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public static int SDL_JoystickSetVirtualHat(SWIGTYPE_p__SDL_Joystick joystick, int hat, SWIGTYPE_p_uint8_t value) {
    return sdl2javaJNI.SDL_JoystickSetVirtualHat(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), hat, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public static String SDL_JoystickName(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickName(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static String SDL_JoystickPath(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickPath(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_JoystickGetPlayerIndex(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickGetPlayerIndex(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static void SDL_JoystickSetPlayerIndex(SWIGTYPE_p__SDL_Joystick joystick, int player_index) {
    sdl2javaJNI.SDL_JoystickSetPlayerIndex(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), player_index);
  }

  public static SWIGTYPE_p_SDL_GUID SDL_JoystickGetGUID(SWIGTYPE_p__SDL_Joystick joystick) {
    return new SWIGTYPE_p_SDL_GUID(sdl2javaJNI.SDL_JoystickGetGUID(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_JoystickGetVendor(SWIGTYPE_p__SDL_Joystick joystick) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_JoystickGetVendor(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_JoystickGetProduct(SWIGTYPE_p__SDL_Joystick joystick) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_JoystickGetProduct(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_JoystickGetProductVersion(SWIGTYPE_p__SDL_Joystick joystick) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_JoystickGetProductVersion(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_JoystickGetFirmwareVersion(SWIGTYPE_p__SDL_Joystick joystick) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_JoystickGetFirmwareVersion(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)), true);
  }

  public static String SDL_JoystickGetSerial(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickGetSerial(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static SDL_JoystickType SDL_JoystickGetType(SWIGTYPE_p__SDL_Joystick joystick) {
    return SDL_JoystickType.swigToEnum(sdl2javaJNI.SDL_JoystickGetType(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)));
  }

  public static void SDL_JoystickGetGUIDString(SWIGTYPE_p_SDL_GUID guid, String pszGUID, int cbGUID) {
    sdl2javaJNI.SDL_JoystickGetGUIDString(SWIGTYPE_p_SDL_GUID.getCPtr(guid), pszGUID, cbGUID);
  }

  public static SWIGTYPE_p_SDL_GUID SDL_JoystickGetGUIDFromString(String pchGUID) {
    return new SWIGTYPE_p_SDL_GUID(sdl2javaJNI.SDL_JoystickGetGUIDFromString(pchGUID), true);
  }

  public static void SDL_GetJoystickGUIDInfo(SWIGTYPE_p_SDL_GUID guid, SWIGTYPE_p_uint16_t vendor, SWIGTYPE_p_uint16_t product, SWIGTYPE_p_uint16_t version, SWIGTYPE_p_uint16_t crc16) {
    sdl2javaJNI.SDL_GetJoystickGUIDInfo(SWIGTYPE_p_SDL_GUID.getCPtr(guid), SWIGTYPE_p_uint16_t.getCPtr(vendor), SWIGTYPE_p_uint16_t.getCPtr(product), SWIGTYPE_p_uint16_t.getCPtr(version), SWIGTYPE_p_uint16_t.getCPtr(crc16));
  }

  public static SDL_bool SDL_JoystickGetAttached(SWIGTYPE_p__SDL_Joystick joystick) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_JoystickGetAttached(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)));
  }

  public static SWIGTYPE_p_int32_t SDL_JoystickInstanceID(SWIGTYPE_p__SDL_Joystick joystick) {
    return new SWIGTYPE_p_int32_t(sdl2javaJNI.SDL_JoystickInstanceID(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)), true);
  }

  public static int SDL_JoystickNumAxes(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickNumAxes(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_JoystickNumBalls(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickNumBalls(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_JoystickNumHats(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickNumHats(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static int SDL_JoystickNumButtons(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickNumButtons(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static void SDL_JoystickUpdate() {
    sdl2javaJNI.SDL_JoystickUpdate();
  }

  public static int SDL_JoystickEventState(int state) {
    return sdl2javaJNI.SDL_JoystickEventState(state);
  }

  public static SWIGTYPE_p_int16_t SDL_JoystickGetAxis(SWIGTYPE_p__SDL_Joystick joystick, int axis) {
    return new SWIGTYPE_p_int16_t(sdl2javaJNI.SDL_JoystickGetAxis(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), axis), true);
  }

  public static SDL_bool SDL_JoystickGetAxisInitialState(SWIGTYPE_p__SDL_Joystick joystick, int axis, SWIGTYPE_p_int16_t state) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_JoystickGetAxisInitialState(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), axis, SWIGTYPE_p_int16_t.getCPtr(state)));
  }

  public static SWIGTYPE_p_uint8_t SDL_JoystickGetHat(SWIGTYPE_p__SDL_Joystick joystick, int hat) {
    return new SWIGTYPE_p_uint8_t(sdl2javaJNI.SDL_JoystickGetHat(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), hat), true);
  }

  public static int SDL_JoystickGetBall(SWIGTYPE_p__SDL_Joystick joystick, int ball, SWIGTYPE_p_int dx, SWIGTYPE_p_int dy) {
    return sdl2javaJNI.SDL_JoystickGetBall(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), ball, SWIGTYPE_p_int.getCPtr(dx), SWIGTYPE_p_int.getCPtr(dy));
  }

  public static SWIGTYPE_p_uint8_t SDL_JoystickGetButton(SWIGTYPE_p__SDL_Joystick joystick, int button) {
    return new SWIGTYPE_p_uint8_t(sdl2javaJNI.SDL_JoystickGetButton(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), button), true);
  }

  public static int SDL_JoystickRumble(SWIGTYPE_p__SDL_Joystick joystick, SWIGTYPE_p_uint16_t low_frequency_rumble, SWIGTYPE_p_uint16_t high_frequency_rumble, SWIGTYPE_p_uint32_t duration_ms) {
    return sdl2javaJNI.SDL_JoystickRumble(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), SWIGTYPE_p_uint16_t.getCPtr(low_frequency_rumble), SWIGTYPE_p_uint16_t.getCPtr(high_frequency_rumble), SWIGTYPE_p_uint32_t.getCPtr(duration_ms));
  }

  public static int SDL_JoystickRumbleTriggers(SWIGTYPE_p__SDL_Joystick joystick, SWIGTYPE_p_uint16_t left_rumble, SWIGTYPE_p_uint16_t right_rumble, SWIGTYPE_p_uint32_t duration_ms) {
    return sdl2javaJNI.SDL_JoystickRumbleTriggers(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), SWIGTYPE_p_uint16_t.getCPtr(left_rumble), SWIGTYPE_p_uint16_t.getCPtr(right_rumble), SWIGTYPE_p_uint32_t.getCPtr(duration_ms));
  }

  public static SDL_bool SDL_JoystickHasLED(SWIGTYPE_p__SDL_Joystick joystick) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_JoystickHasLED(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)));
  }

  public static SDL_bool SDL_JoystickHasRumble(SWIGTYPE_p__SDL_Joystick joystick) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_JoystickHasRumble(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)));
  }

  public static SDL_bool SDL_JoystickHasRumbleTriggers(SWIGTYPE_p__SDL_Joystick joystick) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_JoystickHasRumbleTriggers(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)));
  }

  public static int SDL_JoystickSetLED(SWIGTYPE_p__SDL_Joystick joystick, SWIGTYPE_p_uint8_t red, SWIGTYPE_p_uint8_t green, SWIGTYPE_p_uint8_t blue) {
    return sdl2javaJNI.SDL_JoystickSetLED(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), SWIGTYPE_p_uint8_t.getCPtr(red), SWIGTYPE_p_uint8_t.getCPtr(green), SWIGTYPE_p_uint8_t.getCPtr(blue));
  }

  public static int SDL_JoystickSendEffect(SWIGTYPE_p__SDL_Joystick joystick, SWIGTYPE_p_void data, int size) {
    return sdl2javaJNI.SDL_JoystickSendEffect(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick), SWIGTYPE_p_void.getCPtr(data), size);
  }

  public static void SDL_JoystickClose(SWIGTYPE_p__SDL_Joystick joystick) {
    sdl2javaJNI.SDL_JoystickClose(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static SDL_JoystickPowerLevel SDL_JoystickCurrentPowerLevel(SWIGTYPE_p__SDL_Joystick joystick) {
    return SDL_JoystickPowerLevel.swigToEnum(sdl2javaJNI.SDL_JoystickCurrentPowerLevel(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick)));
  }

  public static int SDL_GameControllerAddMappingsFromRW(SDL_RWops rw, int freerw) {
    return sdl2javaJNI.SDL_GameControllerAddMappingsFromRW(SDL_RWops.getCPtr(rw), rw, freerw);
  }

  public static int SDL_GameControllerAddMapping(String mappingString) {
    return sdl2javaJNI.SDL_GameControllerAddMapping(mappingString);
  }

  public static int SDL_GameControllerNumMappings() {
    return sdl2javaJNI.SDL_GameControllerNumMappings();
  }

  public static String SDL_GameControllerMappingForIndex(int mapping_index) {
    return sdl2javaJNI.SDL_GameControllerMappingForIndex(mapping_index);
  }

  public static String SDL_GameControllerMappingForGUID(SWIGTYPE_p_SDL_GUID guid) {
    return sdl2javaJNI.SDL_GameControllerMappingForGUID(SWIGTYPE_p_SDL_GUID.getCPtr(guid));
  }

  public static String SDL_GameControllerMapping(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return sdl2javaJNI.SDL_GameControllerMapping(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static SDL_bool SDL_IsGameController(int joystick_index) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsGameController(joystick_index));
  }

  public static String SDL_GameControllerNameForIndex(int joystick_index) {
    return sdl2javaJNI.SDL_GameControllerNameForIndex(joystick_index);
  }

  public static String SDL_GameControllerPathForIndex(int joystick_index) {
    return sdl2javaJNI.SDL_GameControllerPathForIndex(joystick_index);
  }

  public static SDL_GameControllerType SDL_GameControllerTypeForIndex(int joystick_index) {
    return SDL_GameControllerType.swigToEnum(sdl2javaJNI.SDL_GameControllerTypeForIndex(joystick_index));
  }

  public static String SDL_GameControllerMappingForDeviceIndex(int joystick_index) {
    return sdl2javaJNI.SDL_GameControllerMappingForDeviceIndex(joystick_index);
  }

  public static SWIGTYPE_p__SDL_GameController SDL_GameControllerOpen(int joystick_index) {
    long cPtr = sdl2javaJNI.SDL_GameControllerOpen(joystick_index);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_GameController(cPtr, false);
  }

  public static SWIGTYPE_p__SDL_GameController SDL_GameControllerFromInstanceID(SWIGTYPE_p_int32_t joyid) {
    long cPtr = sdl2javaJNI.SDL_GameControllerFromInstanceID(SWIGTYPE_p_int32_t.getCPtr(joyid));
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_GameController(cPtr, false);
  }

  public static SWIGTYPE_p__SDL_GameController SDL_GameControllerFromPlayerIndex(int player_index) {
    long cPtr = sdl2javaJNI.SDL_GameControllerFromPlayerIndex(player_index);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_GameController(cPtr, false);
  }

  public static String SDL_GameControllerName(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return sdl2javaJNI.SDL_GameControllerName(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static String SDL_GameControllerPath(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return sdl2javaJNI.SDL_GameControllerPath(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static SDL_GameControllerType SDL_GameControllerGetType(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return SDL_GameControllerType.swigToEnum(sdl2javaJNI.SDL_GameControllerGetType(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)));
  }

  public static int SDL_GameControllerGetPlayerIndex(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return sdl2javaJNI.SDL_GameControllerGetPlayerIndex(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static void SDL_GameControllerSetPlayerIndex(SWIGTYPE_p__SDL_GameController gamecontroller, int player_index) {
    sdl2javaJNI.SDL_GameControllerSetPlayerIndex(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), player_index);
  }

  public static SWIGTYPE_p_uint16_t SDL_GameControllerGetVendor(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_GameControllerGetVendor(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_GameControllerGetProduct(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_GameControllerGetProduct(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_GameControllerGetProductVersion(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_GameControllerGetProductVersion(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_GameControllerGetFirmwareVersion(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_GameControllerGetFirmwareVersion(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)), true);
  }

  public static String SDL_GameControllerGetSerial(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return sdl2javaJNI.SDL_GameControllerGetSerial(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static SWIGTYPE_p_uint64_t SDL_GameControllerGetSteamHandle(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return new SWIGTYPE_p_uint64_t(sdl2javaJNI.SDL_GameControllerGetSteamHandle(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)), true);
  }

  public static SDL_bool SDL_GameControllerGetAttached(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerGetAttached(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)));
  }

  public static SWIGTYPE_p__SDL_Joystick SDL_GameControllerGetJoystick(SWIGTYPE_p__SDL_GameController gamecontroller) {
    long cPtr = sdl2javaJNI.SDL_GameControllerGetJoystick(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Joystick(cPtr, false);
  }

  public static int SDL_GameControllerEventState(int state) {
    return sdl2javaJNI.SDL_GameControllerEventState(state);
  }

  public static void SDL_GameControllerUpdate() {
    sdl2javaJNI.SDL_GameControllerUpdate();
  }

  public static SDL_GameControllerAxis SDL_GameControllerGetAxisFromString(String str) {
    return SDL_GameControllerAxis.swigToEnum(sdl2javaJNI.SDL_GameControllerGetAxisFromString(str));
  }

  public static String SDL_GameControllerGetStringForAxis(SDL_GameControllerAxis axis) {
    return sdl2javaJNI.SDL_GameControllerGetStringForAxis(axis.swigValue());
  }

  public static SDL_GameControllerButtonBind SDL_GameControllerGetBindForAxis(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerAxis axis) {
    return new SDL_GameControllerButtonBind(sdl2javaJNI.SDL_GameControllerGetBindForAxis(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), axis.swigValue()), true);
  }

  public static SDL_bool SDL_GameControllerHasAxis(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerAxis axis) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerHasAxis(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), axis.swigValue()));
  }

  public static SWIGTYPE_p_int16_t SDL_GameControllerGetAxis(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerAxis axis) {
    return new SWIGTYPE_p_int16_t(sdl2javaJNI.SDL_GameControllerGetAxis(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), axis.swigValue()), true);
  }

  public static SDL_GameControllerButton SDL_GameControllerGetButtonFromString(String str) {
    return SDL_GameControllerButton.swigToEnum(sdl2javaJNI.SDL_GameControllerGetButtonFromString(str));
  }

  public static String SDL_GameControllerGetStringForButton(SDL_GameControllerButton button) {
    return sdl2javaJNI.SDL_GameControllerGetStringForButton(button.swigValue());
  }

  public static SDL_GameControllerButtonBind SDL_GameControllerGetBindForButton(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerButton button) {
    return new SDL_GameControllerButtonBind(sdl2javaJNI.SDL_GameControllerGetBindForButton(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), button.swigValue()), true);
  }

  public static SDL_bool SDL_GameControllerHasButton(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerButton button) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerHasButton(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), button.swigValue()));
  }

  public static SWIGTYPE_p_uint8_t SDL_GameControllerGetButton(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerButton button) {
    return new SWIGTYPE_p_uint8_t(sdl2javaJNI.SDL_GameControllerGetButton(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), button.swigValue()), true);
  }

  public static int SDL_GameControllerGetNumTouchpads(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return sdl2javaJNI.SDL_GameControllerGetNumTouchpads(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static int SDL_GameControllerGetNumTouchpadFingers(SWIGTYPE_p__SDL_GameController gamecontroller, int touchpad) {
    return sdl2javaJNI.SDL_GameControllerGetNumTouchpadFingers(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), touchpad);
  }

  public static int SDL_GameControllerGetTouchpadFinger(SWIGTYPE_p__SDL_GameController gamecontroller, int touchpad, int finger, SWIGTYPE_p_uint8_t state, SWIGTYPE_p_float x, SWIGTYPE_p_float y, SWIGTYPE_p_float pressure) {
    return sdl2javaJNI.SDL_GameControllerGetTouchpadFinger(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), touchpad, finger, SWIGTYPE_p_uint8_t.getCPtr(state), SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_float.getCPtr(y), SWIGTYPE_p_float.getCPtr(pressure));
  }

  public static SDL_bool SDL_GameControllerHasSensor(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_SDL_SensorType type) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerHasSensor(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_SDL_SensorType.getCPtr(type)));
  }

  public static int SDL_GameControllerSetSensorEnabled(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_SDL_SensorType type, SDL_bool enabled) {
    return sdl2javaJNI.SDL_GameControllerSetSensorEnabled(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_SDL_SensorType.getCPtr(type), enabled.swigValue());
  }

  public static SDL_bool SDL_GameControllerIsSensorEnabled(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_SDL_SensorType type) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerIsSensorEnabled(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_SDL_SensorType.getCPtr(type)));
  }

  public static float SDL_GameControllerGetSensorDataRate(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_SDL_SensorType type) {
    return sdl2javaJNI.SDL_GameControllerGetSensorDataRate(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_SDL_SensorType.getCPtr(type));
  }

  public static int SDL_GameControllerGetSensorData(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_SDL_SensorType type, SWIGTYPE_p_float data, int num_values) {
    return sdl2javaJNI.SDL_GameControllerGetSensorData(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_SDL_SensorType.getCPtr(type), SWIGTYPE_p_float.getCPtr(data), num_values);
  }

  public static int SDL_GameControllerGetSensorDataWithTimestamp(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_SDL_SensorType type, SWIGTYPE_p_uint64_t timestamp, SWIGTYPE_p_float data, int num_values) {
    return sdl2javaJNI.SDL_GameControllerGetSensorDataWithTimestamp(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_SDL_SensorType.getCPtr(type), SWIGTYPE_p_uint64_t.getCPtr(timestamp), SWIGTYPE_p_float.getCPtr(data), num_values);
  }

  public static int SDL_GameControllerRumble(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_uint16_t low_frequency_rumble, SWIGTYPE_p_uint16_t high_frequency_rumble, SWIGTYPE_p_uint32_t duration_ms) {
    return sdl2javaJNI.SDL_GameControllerRumble(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_uint16_t.getCPtr(low_frequency_rumble), SWIGTYPE_p_uint16_t.getCPtr(high_frequency_rumble), SWIGTYPE_p_uint32_t.getCPtr(duration_ms));
  }

  public static int SDL_GameControllerRumbleTriggers(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_uint16_t left_rumble, SWIGTYPE_p_uint16_t right_rumble, SWIGTYPE_p_uint32_t duration_ms) {
    return sdl2javaJNI.SDL_GameControllerRumbleTriggers(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_uint16_t.getCPtr(left_rumble), SWIGTYPE_p_uint16_t.getCPtr(right_rumble), SWIGTYPE_p_uint32_t.getCPtr(duration_ms));
  }

  public static SDL_bool SDL_GameControllerHasLED(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerHasLED(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)));
  }

  public static SDL_bool SDL_GameControllerHasRumble(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerHasRumble(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)));
  }

  public static SDL_bool SDL_GameControllerHasRumbleTriggers(SWIGTYPE_p__SDL_GameController gamecontroller) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GameControllerHasRumbleTriggers(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller)));
  }

  public static int SDL_GameControllerSetLED(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_uint8_t red, SWIGTYPE_p_uint8_t green, SWIGTYPE_p_uint8_t blue) {
    return sdl2javaJNI.SDL_GameControllerSetLED(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_uint8_t.getCPtr(red), SWIGTYPE_p_uint8_t.getCPtr(green), SWIGTYPE_p_uint8_t.getCPtr(blue));
  }

  public static int SDL_GameControllerSendEffect(SWIGTYPE_p__SDL_GameController gamecontroller, SWIGTYPE_p_void data, int size) {
    return sdl2javaJNI.SDL_GameControllerSendEffect(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), SWIGTYPE_p_void.getCPtr(data), size);
  }

  public static void SDL_GameControllerClose(SWIGTYPE_p__SDL_GameController gamecontroller) {
    sdl2javaJNI.SDL_GameControllerClose(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller));
  }

  public static String SDL_GameControllerGetAppleSFSymbolsNameForButton(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerButton button) {
    return sdl2javaJNI.SDL_GameControllerGetAppleSFSymbolsNameForButton(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), button.swigValue());
  }

  public static String SDL_GameControllerGetAppleSFSymbolsNameForAxis(SWIGTYPE_p__SDL_GameController gamecontroller, SDL_GameControllerAxis axis) {
    return sdl2javaJNI.SDL_GameControllerGetAppleSFSymbolsNameForAxis(SWIGTYPE_p__SDL_GameController.getCPtr(gamecontroller), axis.swigValue());
  }

  public static int SDL_NumHaptics() {
    return sdl2javaJNI.SDL_NumHaptics();
  }

  public static String SDL_HapticName(int device_index) {
    return sdl2javaJNI.SDL_HapticName(device_index);
  }

  public static SWIGTYPE_p__SDL_Haptic SDL_HapticOpen(int device_index) {
    long cPtr = sdl2javaJNI.SDL_HapticOpen(device_index);
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Haptic(cPtr, false);
  }

  public static int SDL_HapticOpened(int device_index) {
    return sdl2javaJNI.SDL_HapticOpened(device_index);
  }

  public static int SDL_HapticIndex(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticIndex(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_MouseIsHaptic() {
    return sdl2javaJNI.SDL_MouseIsHaptic();
  }

  public static SWIGTYPE_p__SDL_Haptic SDL_HapticOpenFromMouse() {
    long cPtr = sdl2javaJNI.SDL_HapticOpenFromMouse();
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Haptic(cPtr, false);
  }

  public static int SDL_JoystickIsHaptic(SWIGTYPE_p__SDL_Joystick joystick) {
    return sdl2javaJNI.SDL_JoystickIsHaptic(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
  }

  public static SWIGTYPE_p__SDL_Haptic SDL_HapticOpenFromJoystick(SWIGTYPE_p__SDL_Joystick joystick) {
    long cPtr = sdl2javaJNI.SDL_HapticOpenFromJoystick(SWIGTYPE_p__SDL_Joystick.getCPtr(joystick));
    return (cPtr == 0) ? null : new SWIGTYPE_p__SDL_Haptic(cPtr, false);
  }

  public static void SDL_HapticClose(SWIGTYPE_p__SDL_Haptic haptic) {
    sdl2javaJNI.SDL_HapticClose(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticNumEffects(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticNumEffects(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticNumEffectsPlaying(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticNumEffectsPlaying(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static long SDL_HapticQuery(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticQuery(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticNumAxes(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticNumAxes(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticEffectSupported(SWIGTYPE_p__SDL_Haptic haptic, SDL_HapticEffect effect) {
    return sdl2javaJNI.SDL_HapticEffectSupported(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), SDL_HapticEffect.getCPtr(effect), effect);
  }

  public static int SDL_HapticNewEffect(SWIGTYPE_p__SDL_Haptic haptic, SDL_HapticEffect effect) {
    return sdl2javaJNI.SDL_HapticNewEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), SDL_HapticEffect.getCPtr(effect), effect);
  }

  public static int SDL_HapticUpdateEffect(SWIGTYPE_p__SDL_Haptic haptic, int effect, SDL_HapticEffect data) {
    return sdl2javaJNI.SDL_HapticUpdateEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect, SDL_HapticEffect.getCPtr(data), data);
  }

  public static int SDL_HapticRunEffect(SWIGTYPE_p__SDL_Haptic haptic, int effect, SWIGTYPE_p_uint32_t iterations) {
    return sdl2javaJNI.SDL_HapticRunEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect, SWIGTYPE_p_uint32_t.getCPtr(iterations));
  }

  public static int SDL_HapticStopEffect(SWIGTYPE_p__SDL_Haptic haptic, int effect) {
    return sdl2javaJNI.SDL_HapticStopEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect);
  }

  public static void SDL_HapticDestroyEffect(SWIGTYPE_p__SDL_Haptic haptic, int effect) {
    sdl2javaJNI.SDL_HapticDestroyEffect(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect);
  }

  public static int SDL_HapticGetEffectStatus(SWIGTYPE_p__SDL_Haptic haptic, int effect) {
    return sdl2javaJNI.SDL_HapticGetEffectStatus(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), effect);
  }

  public static int SDL_HapticSetGain(SWIGTYPE_p__SDL_Haptic haptic, int gain) {
    return sdl2javaJNI.SDL_HapticSetGain(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), gain);
  }

  public static int SDL_HapticSetAutocenter(SWIGTYPE_p__SDL_Haptic haptic, int autocenter) {
    return sdl2javaJNI.SDL_HapticSetAutocenter(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), autocenter);
  }

  public static int SDL_HapticPause(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticPause(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticUnpause(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticUnpause(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticStopAll(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticStopAll(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticRumbleSupported(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticRumbleSupported(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticRumbleInit(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticRumbleInit(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static int SDL_HapticRumblePlay(SWIGTYPE_p__SDL_Haptic haptic, float strength, SWIGTYPE_p_uint32_t length) {
    return sdl2javaJNI.SDL_HapticRumblePlay(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic), strength, SWIGTYPE_p_uint32_t.getCPtr(length));
  }

  public static int SDL_HapticRumbleStop(SWIGTYPE_p__SDL_Haptic haptic) {
    return sdl2javaJNI.SDL_HapticRumbleStop(SWIGTYPE_p__SDL_Haptic.getCPtr(haptic));
  }

  public static SDL_bool SDL_SetHintWithPriority(String name, String value, SDL_HintPriority priority) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_SetHintWithPriority(name, value, priority.swigValue()));
  }

  public static SDL_bool SDL_SetHint(String name, String value) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_SetHint(name, value));
  }

  public static SDL_bool SDL_ResetHint(String name) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_ResetHint(name));
  }

  public static void SDL_ResetHints() {
    sdl2javaJNI.SDL_ResetHints();
  }

  public static String SDL_GetHint(String name) {
    return sdl2javaJNI.SDL_GetHint(name);
  }

  public static SDL_bool SDL_GetHintBoolean(String name, SDL_bool default_value) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GetHintBoolean(name, default_value.swigValue()));
  }

  public static void SDL_AddHintCallback(String name, SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_q_const__char__void callback, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_AddHintCallback(name, SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_q_const__char__void.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_DelHintCallback(String name, SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_q_const__char__void callback, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_DelHintCallback(name, SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_q_const__char__void.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_ClearHints() {
    sdl2javaJNI.SDL_ClearHints();
  }

  public static SWIGTYPE_p_void SDL_LoadObject(String sofile) {
    long cPtr = sdl2javaJNI.SDL_LoadObject(sofile);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_LoadFunction(SWIGTYPE_p_void handle, String name) {
    long cPtr = sdl2javaJNI.SDL_LoadFunction(SWIGTYPE_p_void.getCPtr(handle), name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_UnloadObject(SWIGTYPE_p_void handle) {
    sdl2javaJNI.SDL_UnloadObject(SWIGTYPE_p_void.getCPtr(handle));
  }

  public static void SDL_LogSetAllPriority(SDL_LogPriority priority) {
    sdl2javaJNI.SDL_LogSetAllPriority(priority.swigValue());
  }

  public static void SDL_LogSetPriority(int category, SDL_LogPriority priority) {
    sdl2javaJNI.SDL_LogSetPriority(category, priority.swigValue());
  }

  public static SDL_LogPriority SDL_LogGetPriority(int category) {
    return SDL_LogPriority.swigToEnum(sdl2javaJNI.SDL_LogGetPriority(category));
  }

  public static void SDL_LogResetPriorities() {
    sdl2javaJNI.SDL_LogResetPriorities();
  }

  public static void SDL_Log(String fmt) {
    sdl2javaJNI.SDL_Log(fmt);
  }

  public static void SDL_LogVerbose(int category, String fmt) {
    sdl2javaJNI.SDL_LogVerbose(category, fmt);
  }

  public static void SDL_LogDebug(int category, String fmt) {
    sdl2javaJNI.SDL_LogDebug(category, fmt);
  }

  public static void SDL_LogInfo(int category, String fmt) {
    sdl2javaJNI.SDL_LogInfo(category, fmt);
  }

  public static void SDL_LogWarn(int category, String fmt) {
    sdl2javaJNI.SDL_LogWarn(category, fmt);
  }

  public static void SDL_LogError(int category, String fmt) {
    sdl2javaJNI.SDL_LogError(category, fmt);
  }

  public static void SDL_LogCritical(int category, String fmt) {
    sdl2javaJNI.SDL_LogCritical(category, fmt);
  }

  public static void SDL_LogMessage(int category, SDL_LogPriority priority, String fmt) {
    sdl2javaJNI.SDL_LogMessage(category, priority.swigValue(), fmt);
  }

  public static void SDL_LogGetOutputFunction(SWIGTYPE_p_p_f_p_void_int_enum_SDL_LogPriority_p_q_const__char__void callback, SWIGTYPE_p_p_void userdata) {
    sdl2javaJNI.SDL_LogGetOutputFunction(SWIGTYPE_p_p_f_p_void_int_enum_SDL_LogPriority_p_q_const__char__void.getCPtr(callback), SWIGTYPE_p_p_void.getCPtr(userdata));
  }

  public static void SDL_LogSetOutputFunction(SWIGTYPE_p_f_p_void_int_enum_SDL_LogPriority_p_q_const__char__void callback, SWIGTYPE_p_void userdata) {
    sdl2javaJNI.SDL_LogSetOutputFunction(SWIGTYPE_p_f_p_void_int_enum_SDL_LogPriority_p_q_const__char__void.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static int SDL_ShowMessageBox(SDL_MessageBoxData messageboxdata, SWIGTYPE_p_int buttonid) {
    return sdl2javaJNI.SDL_ShowMessageBox(SDL_MessageBoxData.getCPtr(messageboxdata), messageboxdata, SWIGTYPE_p_int.getCPtr(buttonid));
  }

  public static int SDL_ShowSimpleMessageBox(SWIGTYPE_p_uint32_t flags, String title, String message, SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_ShowSimpleMessageBox(SWIGTYPE_p_uint32_t.getCPtr(flags), title, message, SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SDL_PowerState SDL_GetPowerInfo(SWIGTYPE_p_int seconds, SWIGTYPE_p_int percent) {
    return SDL_PowerState.swigToEnum(sdl2javaJNI.SDL_GetPowerInfo(SWIGTYPE_p_int.getCPtr(seconds), SWIGTYPE_p_int.getCPtr(percent)));
  }

  public static int SDL_GetNumRenderDrivers() {
    return sdl2javaJNI.SDL_GetNumRenderDrivers();
  }

  public static int SDL_GetRenderDriverInfo(int index, SDL_RendererInfo info) {
    return sdl2javaJNI.SDL_GetRenderDriverInfo(index, SDL_RendererInfo.getCPtr(info), info);
  }

  public static int SDL_CreateWindowAndRenderer(int width, int height, SWIGTYPE_p_uint32_t window_flags, SWIGTYPE_p_p_SDL_Window window, SWIGTYPE_p_p_SDL_Renderer renderer) {
    return sdl2javaJNI.SDL_CreateWindowAndRenderer(width, height, SWIGTYPE_p_uint32_t.getCPtr(window_flags), SWIGTYPE_p_p_SDL_Window.getCPtr(window), SWIGTYPE_p_p_SDL_Renderer.getCPtr(renderer));
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_CreateRenderer(SWIGTYPE_p_SDL_Window window, int index, SWIGTYPE_p_uint32_t flags) {
    long cPtr = sdl2javaJNI.SDL_CreateRenderer(SWIGTYPE_p_SDL_Window.getCPtr(window), index, SWIGTYPE_p_uint32_t.getCPtr(flags));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_CreateSoftwareRenderer(SDL_Surface surface) {
    long cPtr = sdl2javaJNI.SDL_CreateSoftwareRenderer(SDL_Surface.getCPtr(surface), surface);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_GetRenderer(SWIGTYPE_p_SDL_Window window) {
    long cPtr = sdl2javaJNI.SDL_GetRenderer(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Window SDL_RenderGetWindow(SWIGTYPE_p_SDL_Renderer renderer) {
    long cPtr = sdl2javaJNI.SDL_RenderGetWindow(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static int SDL_GetRendererInfo(SWIGTYPE_p_SDL_Renderer renderer, SDL_RendererInfo info) {
    return sdl2javaJNI.SDL_GetRendererInfo(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_RendererInfo.getCPtr(info), info);
  }

  public static int SDL_GetRendererOutputSize(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    return sdl2javaJNI.SDL_GetRendererOutputSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static SWIGTYPE_p_SDL_Texture SDL_CreateTexture(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_uint32_t format, int access, int w, int h) {
    long cPtr = sdl2javaJNI.SDL_CreateTexture(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_uint32_t.getCPtr(format), access, w, h);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Texture SDL_CreateTextureFromSurface(SWIGTYPE_p_SDL_Renderer renderer, SDL_Surface surface) {
    long cPtr = sdl2javaJNI.SDL_CreateTextureFromSurface(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Surface.getCPtr(surface), surface);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static int SDL_QueryTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_uint32_t format, SWIGTYPE_p_int access, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    return sdl2javaJNI.SDL_QueryTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_uint32_t.getCPtr(format), SWIGTYPE_p_int.getCPtr(access), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_SetTextureColorMod(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_uint8_t r, SWIGTYPE_p_uint8_t g, SWIGTYPE_p_uint8_t b) {
    return sdl2javaJNI.SDL_SetTextureColorMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_uint8_t.getCPtr(r), SWIGTYPE_p_uint8_t.getCPtr(g), SWIGTYPE_p_uint8_t.getCPtr(b));
  }

  public static int SDL_GetTextureColorMod(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_uint8_t r, SWIGTYPE_p_uint8_t g, SWIGTYPE_p_uint8_t b) {
    return sdl2javaJNI.SDL_GetTextureColorMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_uint8_t.getCPtr(r), SWIGTYPE_p_uint8_t.getCPtr(g), SWIGTYPE_p_uint8_t.getCPtr(b));
  }

  public static int SDL_SetTextureAlphaMod(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_uint8_t alpha) {
    return sdl2javaJNI.SDL_SetTextureAlphaMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_uint8_t.getCPtr(alpha));
  }

  public static int SDL_GetTextureAlphaMod(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_uint8_t alpha) {
    return sdl2javaJNI.SDL_GetTextureAlphaMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_uint8_t.getCPtr(alpha));
  }

  public static int SDL_SetTextureBlendMode(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_SetTextureBlendMode(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_GetTextureBlendMode(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_GetTextureBlendMode(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_SetTextureScaleMode(SWIGTYPE_p_SDL_Texture texture, SDL_ScaleMode scaleMode) {
    return sdl2javaJNI.SDL_SetTextureScaleMode(SWIGTYPE_p_SDL_Texture.getCPtr(texture), scaleMode.swigValue());
  }

  public static int SDL_GetTextureScaleMode(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_ScaleMode scaleMode) {
    return sdl2javaJNI.SDL_GetTextureScaleMode(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_ScaleMode.getCPtr(scaleMode));
  }

  public static int SDL_SetTextureUserData(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_void userdata) {
    return sdl2javaJNI.SDL_SetTextureUserData(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static SWIGTYPE_p_void SDL_GetTextureUserData(SWIGTYPE_p_SDL_Texture texture) {
    long cPtr = sdl2javaJNI.SDL_GetTextureUserData(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_UpdateTexture(SWIGTYPE_p_SDL_Texture texture, SDL_Rect rect, SWIGTYPE_p_void pixels, int pitch) {
    return sdl2javaJNI.SDL_UpdateTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_void.getCPtr(pixels), pitch);
  }

  public static int SDL_UpdateYUVTexture(SWIGTYPE_p_SDL_Texture texture, SDL_Rect rect, SWIGTYPE_p_uint8_t Yplane, int Ypitch, SWIGTYPE_p_uint8_t Uplane, int Upitch, SWIGTYPE_p_uint8_t Vplane, int Vpitch) {
    return sdl2javaJNI.SDL_UpdateYUVTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_uint8_t.getCPtr(Yplane), Ypitch, SWIGTYPE_p_uint8_t.getCPtr(Uplane), Upitch, SWIGTYPE_p_uint8_t.getCPtr(Vplane), Vpitch);
  }

  public static int SDL_UpdateNVTexture(SWIGTYPE_p_SDL_Texture texture, SDL_Rect rect, SWIGTYPE_p_uint8_t Yplane, int Ypitch, SWIGTYPE_p_uint8_t UVplane, int UVpitch) {
    return sdl2javaJNI.SDL_UpdateNVTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_uint8_t.getCPtr(Yplane), Ypitch, SWIGTYPE_p_uint8_t.getCPtr(UVplane), UVpitch);
  }

  public static int SDL_LockTexture(SWIGTYPE_p_SDL_Texture texture, SDL_Rect rect, SWIGTYPE_p_p_void pixels, SWIGTYPE_p_int pitch) {
    return sdl2javaJNI.SDL_LockTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_p_void.getCPtr(pixels), SWIGTYPE_p_int.getCPtr(pitch));
  }

  public static int SDL_LockTextureToSurface(SWIGTYPE_p_SDL_Texture texture, SDL_Rect rect, SWIGTYPE_p_p_SDL_Surface surface) {
    return sdl2javaJNI.SDL_LockTextureToSurface(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_p_SDL_Surface.getCPtr(surface));
  }

  public static void SDL_UnlockTexture(SWIGTYPE_p_SDL_Texture texture) {
    sdl2javaJNI.SDL_UnlockTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static SDL_bool SDL_RenderTargetSupported(SWIGTYPE_p_SDL_Renderer renderer) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RenderTargetSupported(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer)));
  }

  public static int SDL_SetRenderTarget(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture) {
    return sdl2javaJNI.SDL_SetRenderTarget(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static SWIGTYPE_p_SDL_Texture SDL_GetRenderTarget(SWIGTYPE_p_SDL_Renderer renderer) {
    long cPtr = sdl2javaJNI.SDL_GetRenderTarget(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static int SDL_RenderSetLogicalSize(SWIGTYPE_p_SDL_Renderer renderer, int w, int h) {
    return sdl2javaJNI.SDL_RenderSetLogicalSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), w, h);
  }

  public static void SDL_RenderGetLogicalSize(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_RenderGetLogicalSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_RenderSetIntegerScale(SWIGTYPE_p_SDL_Renderer renderer, SDL_bool enable) {
    return sdl2javaJNI.SDL_RenderSetIntegerScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), enable.swigValue());
  }

  public static SDL_bool SDL_RenderGetIntegerScale(SWIGTYPE_p_SDL_Renderer renderer) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RenderGetIntegerScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer)));
  }

  public static int SDL_RenderSetViewport(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    return sdl2javaJNI.SDL_RenderSetViewport(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static void SDL_RenderGetViewport(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    sdl2javaJNI.SDL_RenderGetViewport(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_RenderSetClipRect(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    return sdl2javaJNI.SDL_RenderSetClipRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static void SDL_RenderGetClipRect(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    sdl2javaJNI.SDL_RenderGetClipRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static SDL_bool SDL_RenderIsClipEnabled(SWIGTYPE_p_SDL_Renderer renderer) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RenderIsClipEnabled(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer)));
  }

  public static int SDL_RenderSetScale(SWIGTYPE_p_SDL_Renderer renderer, float scaleX, float scaleY) {
    return sdl2javaJNI.SDL_RenderSetScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), scaleX, scaleY);
  }

  public static void SDL_RenderGetScale(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_float scaleX, SWIGTYPE_p_float scaleY) {
    sdl2javaJNI.SDL_RenderGetScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_float.getCPtr(scaleX), SWIGTYPE_p_float.getCPtr(scaleY));
  }

  public static void SDL_RenderWindowToLogical(SWIGTYPE_p_SDL_Renderer renderer, int windowX, int windowY, SWIGTYPE_p_float logicalX, SWIGTYPE_p_float logicalY) {
    sdl2javaJNI.SDL_RenderWindowToLogical(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), windowX, windowY, SWIGTYPE_p_float.getCPtr(logicalX), SWIGTYPE_p_float.getCPtr(logicalY));
  }

  public static void SDL_RenderLogicalToWindow(SWIGTYPE_p_SDL_Renderer renderer, float logicalX, float logicalY, SWIGTYPE_p_int windowX, SWIGTYPE_p_int windowY) {
    sdl2javaJNI.SDL_RenderLogicalToWindow(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), logicalX, logicalY, SWIGTYPE_p_int.getCPtr(windowX), SWIGTYPE_p_int.getCPtr(windowY));
  }

  public static int SDL_SetRenderDrawColor(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_uint8_t r, SWIGTYPE_p_uint8_t g, SWIGTYPE_p_uint8_t b, SWIGTYPE_p_uint8_t a) {
    return sdl2javaJNI.SDL_SetRenderDrawColor(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_uint8_t.getCPtr(r), SWIGTYPE_p_uint8_t.getCPtr(g), SWIGTYPE_p_uint8_t.getCPtr(b), SWIGTYPE_p_uint8_t.getCPtr(a));
  }

  public static int SDL_GetRenderDrawColor(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_uint8_t r, SWIGTYPE_p_uint8_t g, SWIGTYPE_p_uint8_t b, SWIGTYPE_p_uint8_t a) {
    return sdl2javaJNI.SDL_GetRenderDrawColor(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_uint8_t.getCPtr(r), SWIGTYPE_p_uint8_t.getCPtr(g), SWIGTYPE_p_uint8_t.getCPtr(b), SWIGTYPE_p_uint8_t.getCPtr(a));
  }

  public static int SDL_SetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_SetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_GetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_GetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_RenderClear(SWIGTYPE_p_SDL_Renderer renderer) {
    return sdl2javaJNI.SDL_RenderClear(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static int SDL_RenderDrawPoint(SWIGTYPE_p_SDL_Renderer renderer, int x, int y) {
    return sdl2javaJNI.SDL_RenderDrawPoint(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), x, y);
  }

  public static int SDL_RenderDrawPoints(SWIGTYPE_p_SDL_Renderer renderer, SDL_Point points, int count) {
    return sdl2javaJNI.SDL_RenderDrawPoints(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Point.getCPtr(points), points, count);
  }

  public static int SDL_RenderDrawLine(SWIGTYPE_p_SDL_Renderer renderer, int x1, int y1, int x2, int y2) {
    return sdl2javaJNI.SDL_RenderDrawLine(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), x1, y1, x2, y2);
  }

  public static int SDL_RenderDrawLines(SWIGTYPE_p_SDL_Renderer renderer, SDL_Point points, int count) {
    return sdl2javaJNI.SDL_RenderDrawLines(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Point.getCPtr(points), points, count);
  }

  public static int SDL_RenderDrawRect(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    return sdl2javaJNI.SDL_RenderDrawRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_RenderDrawRects(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rects, int count) {
    return sdl2javaJNI.SDL_RenderDrawRects(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rects), rects, count);
  }

  public static int SDL_RenderFillRect(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect) {
    return sdl2javaJNI.SDL_RenderFillRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_RenderFillRects(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rects, int count) {
    return sdl2javaJNI.SDL_RenderFillRects(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rects), rects, count);
  }

  public static int SDL_RenderCopy(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SDL_Rect srcrect, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_RenderCopy(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(srcrect), srcrect, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_RenderCopyEx(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SDL_Rect srcrect, SDL_Rect dstrect, double angle, SDL_Point center, SDL_RendererFlip flip) {
    return sdl2javaJNI.SDL_RenderCopyEx(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(srcrect), srcrect, SDL_Rect.getCPtr(dstrect), dstrect, angle, SDL_Point.getCPtr(center), center, flip.swigValue());
  }

  public static int SDL_RenderDrawPointF(SWIGTYPE_p_SDL_Renderer renderer, float x, float y) {
    return sdl2javaJNI.SDL_RenderDrawPointF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), x, y);
  }

  public static int SDL_RenderDrawPointsF(SWIGTYPE_p_SDL_Renderer renderer, SDL_FPoint points, int count) {
    return sdl2javaJNI.SDL_RenderDrawPointsF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_FPoint.getCPtr(points), points, count);
  }

  public static int SDL_RenderDrawLineF(SWIGTYPE_p_SDL_Renderer renderer, float x1, float y1, float x2, float y2) {
    return sdl2javaJNI.SDL_RenderDrawLineF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), x1, y1, x2, y2);
  }

  public static int SDL_RenderDrawLinesF(SWIGTYPE_p_SDL_Renderer renderer, SDL_FPoint points, int count) {
    return sdl2javaJNI.SDL_RenderDrawLinesF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_FPoint.getCPtr(points), points, count);
  }

  public static int SDL_RenderDrawRectF(SWIGTYPE_p_SDL_Renderer renderer, SDL_FRect rect) {
    return sdl2javaJNI.SDL_RenderDrawRectF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_FRect.getCPtr(rect), rect);
  }

  public static int SDL_RenderDrawRectsF(SWIGTYPE_p_SDL_Renderer renderer, SDL_FRect rects, int count) {
    return sdl2javaJNI.SDL_RenderDrawRectsF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_FRect.getCPtr(rects), rects, count);
  }

  public static int SDL_RenderFillRectF(SWIGTYPE_p_SDL_Renderer renderer, SDL_FRect rect) {
    return sdl2javaJNI.SDL_RenderFillRectF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_FRect.getCPtr(rect), rect);
  }

  public static int SDL_RenderFillRectsF(SWIGTYPE_p_SDL_Renderer renderer, SDL_FRect rects, int count) {
    return sdl2javaJNI.SDL_RenderFillRectsF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_FRect.getCPtr(rects), rects, count);
  }

  public static int SDL_RenderCopyF(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SDL_Rect srcrect, SDL_FRect dstrect) {
    return sdl2javaJNI.SDL_RenderCopyF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(srcrect), srcrect, SDL_FRect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_RenderCopyExF(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SDL_Rect srcrect, SDL_FRect dstrect, double angle, SDL_FPoint center, SDL_RendererFlip flip) {
    return sdl2javaJNI.SDL_RenderCopyExF(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Rect.getCPtr(srcrect), srcrect, SDL_FRect.getCPtr(dstrect), dstrect, angle, SDL_FPoint.getCPtr(center), center, flip.swigValue());
  }

  public static int SDL_RenderGeometry(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SDL_Vertex vertices, int num_vertices, SWIGTYPE_p_int indices, int num_indices) {
    return sdl2javaJNI.SDL_RenderGeometry(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SDL_Vertex.getCPtr(vertices), vertices, num_vertices, SWIGTYPE_p_int.getCPtr(indices), num_indices);
  }

  public static int SDL_RenderGeometryRaw(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_float xy, int xy_stride, SWIGTYPE_p_SDL_Color color, int color_stride, SWIGTYPE_p_float uv, int uv_stride, int num_vertices, SWIGTYPE_p_void indices, int num_indices, int size_indices) {
    return sdl2javaJNI.SDL_RenderGeometryRaw(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_float.getCPtr(xy), xy_stride, SWIGTYPE_p_SDL_Color.getCPtr(color), color_stride, SWIGTYPE_p_float.getCPtr(uv), uv_stride, num_vertices, SWIGTYPE_p_void.getCPtr(indices), num_indices, size_indices);
  }

  public static int SDL_RenderReadPixels(SWIGTYPE_p_SDL_Renderer renderer, SDL_Rect rect, SWIGTYPE_p_uint32_t format, SWIGTYPE_p_void pixels, int pitch) {
    return sdl2javaJNI.SDL_RenderReadPixels(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_uint32_t.getCPtr(format), SWIGTYPE_p_void.getCPtr(pixels), pitch);
  }

  public static void SDL_RenderPresent(SWIGTYPE_p_SDL_Renderer renderer) {
    sdl2javaJNI.SDL_RenderPresent(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static void SDL_DestroyTexture(SWIGTYPE_p_SDL_Texture texture) {
    sdl2javaJNI.SDL_DestroyTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static void SDL_DestroyRenderer(SWIGTYPE_p_SDL_Renderer renderer) {
    sdl2javaJNI.SDL_DestroyRenderer(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static int SDL_RenderFlush(SWIGTYPE_p_SDL_Renderer renderer) {
    return sdl2javaJNI.SDL_RenderFlush(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static int SDL_GL_BindTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_float texw, SWIGTYPE_p_float texh) {
    return sdl2javaJNI.SDL_GL_BindTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_float.getCPtr(texw), SWIGTYPE_p_float.getCPtr(texh));
  }

  public static int SDL_GL_UnbindTexture(SWIGTYPE_p_SDL_Texture texture) {
    return sdl2javaJNI.SDL_GL_UnbindTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static SWIGTYPE_p_void SDL_RenderGetMetalLayer(SWIGTYPE_p_SDL_Renderer renderer) {
    long cPtr = sdl2javaJNI.SDL_RenderGetMetalLayer(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_RenderGetMetalCommandEncoder(SWIGTYPE_p_SDL_Renderer renderer) {
    long cPtr = sdl2javaJNI.SDL_RenderGetMetalCommandEncoder(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_RenderSetVSync(SWIGTYPE_p_SDL_Renderer renderer, int vsync) {
    return sdl2javaJNI.SDL_RenderSetVSync(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), vsync);
  }

  public static SDL_RWops SDL_RWFromFile(String file, String mode) {
    long cPtr = sdl2javaJNI.SDL_RWFromFile(file, mode);
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static SDL_RWops SDL_RWFromFP(SWIGTYPE_p_void fp, SDL_bool autoclose) {
    long cPtr = sdl2javaJNI.SDL_RWFromFP(SWIGTYPE_p_void.getCPtr(fp), autoclose.swigValue());
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static SDL_RWops SDL_RWFromMem(SWIGTYPE_p_void mem, int size) {
    long cPtr = sdl2javaJNI.SDL_RWFromMem(SWIGTYPE_p_void.getCPtr(mem), size);
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static SDL_RWops SDL_RWFromConstMem(SWIGTYPE_p_void mem, int size) {
    long cPtr = sdl2javaJNI.SDL_RWFromConstMem(SWIGTYPE_p_void.getCPtr(mem), size);
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static SDL_RWops SDL_AllocRW() {
    long cPtr = sdl2javaJNI.SDL_AllocRW();
    return (cPtr == 0) ? null : new SDL_RWops(cPtr, false);
  }

  public static void SDL_FreeRW(SDL_RWops area) {
    sdl2javaJNI.SDL_FreeRW(SDL_RWops.getCPtr(area), area);
  }

  public static SWIGTYPE_p_int64_t SDL_RWsize(SDL_RWops context) {
    return new SWIGTYPE_p_int64_t(sdl2javaJNI.SDL_RWsize(SDL_RWops.getCPtr(context), context), true);
  }

  public static SWIGTYPE_p_int64_t SDL_RWseek(SDL_RWops context, SWIGTYPE_p_int64_t offset, int whence) {
    return new SWIGTYPE_p_int64_t(sdl2javaJNI.SDL_RWseek(SDL_RWops.getCPtr(context), context, SWIGTYPE_p_int64_t.getCPtr(offset), whence), true);
  }

  public static SWIGTYPE_p_int64_t SDL_RWtell(SDL_RWops context) {
    return new SWIGTYPE_p_int64_t(sdl2javaJNI.SDL_RWtell(SDL_RWops.getCPtr(context), context), true);
  }

  public static long SDL_RWread(SDL_RWops context, SWIGTYPE_p_void ptr, long size, long maxnum) {
    return sdl2javaJNI.SDL_RWread(SDL_RWops.getCPtr(context), context, SWIGTYPE_p_void.getCPtr(ptr), size, maxnum);
  }

  public static long SDL_RWwrite(SDL_RWops context, SWIGTYPE_p_void ptr, long size, long num) {
    return sdl2javaJNI.SDL_RWwrite(SDL_RWops.getCPtr(context), context, SWIGTYPE_p_void.getCPtr(ptr), size, num);
  }

  public static int SDL_RWclose(SDL_RWops context) {
    return sdl2javaJNI.SDL_RWclose(SDL_RWops.getCPtr(context), context);
  }

  public static SWIGTYPE_p_void SDL_LoadFile_RW(SDL_RWops src, SWIGTYPE_p_size_t datasize, int freesrc) {
    long cPtr = sdl2javaJNI.SDL_LoadFile_RW(SDL_RWops.getCPtr(src), src, SWIGTYPE_p_size_t.getCPtr(datasize), freesrc);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_LoadFile(String file, SWIGTYPE_p_size_t datasize) {
    long cPtr = sdl2javaJNI.SDL_LoadFile(file, SWIGTYPE_p_size_t.getCPtr(datasize));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_uint8_t SDL_ReadU8(SDL_RWops src) {
    return new SWIGTYPE_p_uint8_t(sdl2javaJNI.SDL_ReadU8(SDL_RWops.getCPtr(src), src), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_ReadLE16(SDL_RWops src) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_ReadLE16(SDL_RWops.getCPtr(src), src), true);
  }

  public static SWIGTYPE_p_uint16_t SDL_ReadBE16(SDL_RWops src) {
    return new SWIGTYPE_p_uint16_t(sdl2javaJNI.SDL_ReadBE16(SDL_RWops.getCPtr(src), src), true);
  }

  public static SWIGTYPE_p_uint32_t SDL_ReadLE32(SDL_RWops src) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_ReadLE32(SDL_RWops.getCPtr(src), src), true);
  }

  public static SWIGTYPE_p_uint32_t SDL_ReadBE32(SDL_RWops src) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_ReadBE32(SDL_RWops.getCPtr(src), src), true);
  }

  public static SWIGTYPE_p_uint64_t SDL_ReadLE64(SDL_RWops src) {
    return new SWIGTYPE_p_uint64_t(sdl2javaJNI.SDL_ReadLE64(SDL_RWops.getCPtr(src), src), true);
  }

  public static SWIGTYPE_p_uint64_t SDL_ReadBE64(SDL_RWops src) {
    return new SWIGTYPE_p_uint64_t(sdl2javaJNI.SDL_ReadBE64(SDL_RWops.getCPtr(src), src), true);
  }

  public static long SDL_WriteU8(SDL_RWops dst, SWIGTYPE_p_uint8_t value) {
    return sdl2javaJNI.SDL_WriteU8(SDL_RWops.getCPtr(dst), dst, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public static long SDL_WriteLE16(SDL_RWops dst, SWIGTYPE_p_uint16_t value) {
    return sdl2javaJNI.SDL_WriteLE16(SDL_RWops.getCPtr(dst), dst, SWIGTYPE_p_uint16_t.getCPtr(value));
  }

  public static long SDL_WriteBE16(SDL_RWops dst, SWIGTYPE_p_uint16_t value) {
    return sdl2javaJNI.SDL_WriteBE16(SDL_RWops.getCPtr(dst), dst, SWIGTYPE_p_uint16_t.getCPtr(value));
  }

  public static long SDL_WriteLE32(SDL_RWops dst, SWIGTYPE_p_uint32_t value) {
    return sdl2javaJNI.SDL_WriteLE32(SDL_RWops.getCPtr(dst), dst, SWIGTYPE_p_uint32_t.getCPtr(value));
  }

  public static long SDL_WriteBE32(SDL_RWops dst, SWIGTYPE_p_uint32_t value) {
    return sdl2javaJNI.SDL_WriteBE32(SDL_RWops.getCPtr(dst), dst, SWIGTYPE_p_uint32_t.getCPtr(value));
  }

  public static long SDL_WriteLE64(SDL_RWops dst, SWIGTYPE_p_uint64_t value) {
    return sdl2javaJNI.SDL_WriteLE64(SDL_RWops.getCPtr(dst), dst, SWIGTYPE_p_uint64_t.getCPtr(value));
  }

  public static long SDL_WriteBE64(SDL_RWops dst, SWIGTYPE_p_uint64_t value) {
    return sdl2javaJNI.SDL_WriteBE64(SDL_RWops.getCPtr(dst), dst, SWIGTYPE_p_uint64_t.getCPtr(value));
  }

  public static SDL_bool SDL_IsTablet() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsTablet());
  }

  public static void SDL_OnApplicationWillTerminate() {
    sdl2javaJNI.SDL_OnApplicationWillTerminate();
  }

  public static void SDL_OnApplicationDidReceiveMemoryWarning() {
    sdl2javaJNI.SDL_OnApplicationDidReceiveMemoryWarning();
  }

  public static void SDL_OnApplicationWillResignActive() {
    sdl2javaJNI.SDL_OnApplicationWillResignActive();
  }

  public static void SDL_OnApplicationDidEnterBackground() {
    sdl2javaJNI.SDL_OnApplicationDidEnterBackground();
  }

  public static void SDL_OnApplicationWillEnterForeground() {
    sdl2javaJNI.SDL_OnApplicationWillEnterForeground();
  }

  public static void SDL_OnApplicationDidBecomeActive() {
    sdl2javaJNI.SDL_OnApplicationDidBecomeActive();
  }

  public static SWIGTYPE_p_SDL_Thread SDL_CreateThread(SWIGTYPE_p_f_p_void__int fn, String name, SWIGTYPE_p_void data) {
    long cPtr = sdl2javaJNI.SDL_CreateThread(SWIGTYPE_p_f_p_void__int.getCPtr(fn), name, SWIGTYPE_p_void.getCPtr(data));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Thread(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Thread SDL_CreateThreadWithStackSize(SWIGTYPE_p_f_p_void__int fn, String name, long stacksize, SWIGTYPE_p_void data) {
    long cPtr = sdl2javaJNI.SDL_CreateThreadWithStackSize(SWIGTYPE_p_f_p_void__int.getCPtr(fn), name, stacksize, SWIGTYPE_p_void.getCPtr(data));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Thread(cPtr, false);
  }

  public static String SDL_GetThreadName(SWIGTYPE_p_SDL_Thread thread) {
    return sdl2javaJNI.SDL_GetThreadName(SWIGTYPE_p_SDL_Thread.getCPtr(thread));
  }

  public static long SDL_ThreadID() {
    return sdl2javaJNI.SDL_ThreadID();
  }

  public static long SDL_GetThreadID(SWIGTYPE_p_SDL_Thread thread) {
    return sdl2javaJNI.SDL_GetThreadID(SWIGTYPE_p_SDL_Thread.getCPtr(thread));
  }

  public static int SDL_SetThreadPriority(SDL_ThreadPriority priority) {
    return sdl2javaJNI.SDL_SetThreadPriority(priority.swigValue());
  }

  public static void SDL_WaitThread(SWIGTYPE_p_SDL_Thread thread, SWIGTYPE_p_int status) {
    sdl2javaJNI.SDL_WaitThread(SWIGTYPE_p_SDL_Thread.getCPtr(thread), SWIGTYPE_p_int.getCPtr(status));
  }

  public static void SDL_DetachThread(SWIGTYPE_p_SDL_Thread thread) {
    sdl2javaJNI.SDL_DetachThread(SWIGTYPE_p_SDL_Thread.getCPtr(thread));
  }

  public static long SDL_TLSCreate() {
    return sdl2javaJNI.SDL_TLSCreate();
  }

  public static SWIGTYPE_p_void SDL_TLSGet(long id) {
    long cPtr = sdl2javaJNI.SDL_TLSGet(id);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_TLSSet(long id, SWIGTYPE_p_void value, SWIGTYPE_p_f_p_void__void destructor) {
    return sdl2javaJNI.SDL_TLSSet(id, SWIGTYPE_p_void.getCPtr(value), SWIGTYPE_p_f_p_void__void.getCPtr(destructor));
  }

  public static void SDL_TLSCleanup() {
    sdl2javaJNI.SDL_TLSCleanup();
  }

  public static SWIGTYPE_p_uint32_t SDL_GetTicks() {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_GetTicks(), true);
  }

  public static SWIGTYPE_p_uint64_t SDL_GetTicks64() {
    return new SWIGTYPE_p_uint64_t(sdl2javaJNI.SDL_GetTicks64(), true);
  }

  public static SWIGTYPE_p_uint64_t SDL_GetPerformanceCounter() {
    return new SWIGTYPE_p_uint64_t(sdl2javaJNI.SDL_GetPerformanceCounter(), true);
  }

  public static SWIGTYPE_p_uint64_t SDL_GetPerformanceFrequency() {
    return new SWIGTYPE_p_uint64_t(sdl2javaJNI.SDL_GetPerformanceFrequency(), true);
  }

  public static void SDL_Delay(SWIGTYPE_p_uint32_t ms) {
    sdl2javaJNI.SDL_Delay(SWIGTYPE_p_uint32_t.getCPtr(ms));
  }

  public static int SDL_AddTimer(SWIGTYPE_p_uint32_t interval, SWIGTYPE_p_f_uint32_t_p_void__uint32_t callback, SWIGTYPE_p_void param) {
    return sdl2javaJNI.SDL_AddTimer(SWIGTYPE_p_uint32_t.getCPtr(interval), SWIGTYPE_p_f_uint32_t_p_void__uint32_t.getCPtr(callback), SWIGTYPE_p_void.getCPtr(param));
  }

  public static SDL_bool SDL_RemoveTimer(int id) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_RemoveTimer(id));
  }

  public static void SDL_GetVersion(SDL_version ver) {
    sdl2javaJNI.SDL_GetVersion(SDL_version.getCPtr(ver), ver);
  }

  public static String SDL_GetRevision() {
    return sdl2javaJNI.SDL_GetRevision();
  }

  public static int SDL_GetRevisionNumber() {
    return sdl2javaJNI.SDL_GetRevisionNumber();
  }

  public static SDL_Surface SDL_CreateRGBSurface(SWIGTYPE_p_uint32_t flags, int width, int height, int depth, SWIGTYPE_p_uint32_t Rmask, SWIGTYPE_p_uint32_t Gmask, SWIGTYPE_p_uint32_t Bmask, SWIGTYPE_p_uint32_t Amask) {
    long cPtr = sdl2javaJNI.SDL_CreateRGBSurface(SWIGTYPE_p_uint32_t.getCPtr(flags), width, height, depth, SWIGTYPE_p_uint32_t.getCPtr(Rmask), SWIGTYPE_p_uint32_t.getCPtr(Gmask), SWIGTYPE_p_uint32_t.getCPtr(Bmask), SWIGTYPE_p_uint32_t.getCPtr(Amask));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_CreateRGBSurfaceWithFormat(SWIGTYPE_p_uint32_t flags, int width, int height, int depth, SWIGTYPE_p_uint32_t format) {
    long cPtr = sdl2javaJNI.SDL_CreateRGBSurfaceWithFormat(SWIGTYPE_p_uint32_t.getCPtr(flags), width, height, depth, SWIGTYPE_p_uint32_t.getCPtr(format));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_CreateRGBSurfaceFrom(SWIGTYPE_p_void pixels, int width, int height, int depth, int pitch, SWIGTYPE_p_uint32_t Rmask, SWIGTYPE_p_uint32_t Gmask, SWIGTYPE_p_uint32_t Bmask, SWIGTYPE_p_uint32_t Amask) {
    long cPtr = sdl2javaJNI.SDL_CreateRGBSurfaceFrom(SWIGTYPE_p_void.getCPtr(pixels), width, height, depth, pitch, SWIGTYPE_p_uint32_t.getCPtr(Rmask), SWIGTYPE_p_uint32_t.getCPtr(Gmask), SWIGTYPE_p_uint32_t.getCPtr(Bmask), SWIGTYPE_p_uint32_t.getCPtr(Amask));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_CreateRGBSurfaceWithFormatFrom(SWIGTYPE_p_void pixels, int width, int height, int depth, int pitch, SWIGTYPE_p_uint32_t format) {
    long cPtr = sdl2javaJNI.SDL_CreateRGBSurfaceWithFormatFrom(SWIGTYPE_p_void.getCPtr(pixels), width, height, depth, pitch, SWIGTYPE_p_uint32_t.getCPtr(format));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static void SDL_FreeSurface(SDL_Surface surface) {
    sdl2javaJNI.SDL_FreeSurface(SDL_Surface.getCPtr(surface), surface);
  }

  public static int SDL_SetSurfacePalette(SDL_Surface surface, SWIGTYPE_p_SDL_Palette palette) {
    return sdl2javaJNI.SDL_SetSurfacePalette(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_SDL_Palette.getCPtr(palette));
  }

  public static int SDL_LockSurface(SDL_Surface surface) {
    return sdl2javaJNI.SDL_LockSurface(SDL_Surface.getCPtr(surface), surface);
  }

  public static void SDL_UnlockSurface(SDL_Surface surface) {
    sdl2javaJNI.SDL_UnlockSurface(SDL_Surface.getCPtr(surface), surface);
  }

  public static SDL_Surface SDL_LoadBMP_RW(SDL_RWops src, int freesrc) {
    long cPtr = sdl2javaJNI.SDL_LoadBMP_RW(SDL_RWops.getCPtr(src), src, freesrc);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static int SDL_SaveBMP_RW(SDL_Surface surface, SDL_RWops dst, int freedst) {
    return sdl2javaJNI.SDL_SaveBMP_RW(SDL_Surface.getCPtr(surface), surface, SDL_RWops.getCPtr(dst), dst, freedst);
  }

  public static int SDL_SetSurfaceRLE(SDL_Surface surface, int flag) {
    return sdl2javaJNI.SDL_SetSurfaceRLE(SDL_Surface.getCPtr(surface), surface, flag);
  }

  public static SDL_bool SDL_HasSurfaceRLE(SDL_Surface surface) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasSurfaceRLE(SDL_Surface.getCPtr(surface), surface));
  }

  public static int SDL_SetColorKey(SDL_Surface surface, int flag, SWIGTYPE_p_uint32_t key) {
    return sdl2javaJNI.SDL_SetColorKey(SDL_Surface.getCPtr(surface), surface, flag, SWIGTYPE_p_uint32_t.getCPtr(key));
  }

  public static SDL_bool SDL_HasColorKey(SDL_Surface surface) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasColorKey(SDL_Surface.getCPtr(surface), surface));
  }

  public static int SDL_GetColorKey(SDL_Surface surface, SWIGTYPE_p_uint32_t key) {
    return sdl2javaJNI.SDL_GetColorKey(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_uint32_t.getCPtr(key));
  }

  public static int SDL_SetSurfaceColorMod(SDL_Surface surface, SWIGTYPE_p_uint8_t r, SWIGTYPE_p_uint8_t g, SWIGTYPE_p_uint8_t b) {
    return sdl2javaJNI.SDL_SetSurfaceColorMod(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_uint8_t.getCPtr(r), SWIGTYPE_p_uint8_t.getCPtr(g), SWIGTYPE_p_uint8_t.getCPtr(b));
  }

  public static int SDL_GetSurfaceColorMod(SDL_Surface surface, SWIGTYPE_p_uint8_t r, SWIGTYPE_p_uint8_t g, SWIGTYPE_p_uint8_t b) {
    return sdl2javaJNI.SDL_GetSurfaceColorMod(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_uint8_t.getCPtr(r), SWIGTYPE_p_uint8_t.getCPtr(g), SWIGTYPE_p_uint8_t.getCPtr(b));
  }

  public static int SDL_SetSurfaceAlphaMod(SDL_Surface surface, SWIGTYPE_p_uint8_t alpha) {
    return sdl2javaJNI.SDL_SetSurfaceAlphaMod(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_uint8_t.getCPtr(alpha));
  }

  public static int SDL_GetSurfaceAlphaMod(SDL_Surface surface, SWIGTYPE_p_uint8_t alpha) {
    return sdl2javaJNI.SDL_GetSurfaceAlphaMod(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_uint8_t.getCPtr(alpha));
  }

  public static int SDL_SetSurfaceBlendMode(SDL_Surface surface, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_SetSurfaceBlendMode(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_GetSurfaceBlendMode(SDL_Surface surface, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return sdl2javaJNI.SDL_GetSurfaceBlendMode(SDL_Surface.getCPtr(surface), surface, SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static SDL_bool SDL_SetClipRect(SDL_Surface surface, SDL_Rect rect) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_SetClipRect(SDL_Surface.getCPtr(surface), surface, SDL_Rect.getCPtr(rect), rect));
  }

  public static void SDL_GetClipRect(SDL_Surface surface, SDL_Rect rect) {
    sdl2javaJNI.SDL_GetClipRect(SDL_Surface.getCPtr(surface), surface, SDL_Rect.getCPtr(rect), rect);
  }

  public static SDL_Surface SDL_DuplicateSurface(SDL_Surface surface) {
    long cPtr = sdl2javaJNI.SDL_DuplicateSurface(SDL_Surface.getCPtr(surface), surface);
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_ConvertSurface(SDL_Surface src, SWIGTYPE_p_SDL_PixelFormat fmt, SWIGTYPE_p_uint32_t flags) {
    long cPtr = sdl2javaJNI.SDL_ConvertSurface(SDL_Surface.getCPtr(src), src, SWIGTYPE_p_SDL_PixelFormat.getCPtr(fmt), SWIGTYPE_p_uint32_t.getCPtr(flags));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static SDL_Surface SDL_ConvertSurfaceFormat(SDL_Surface src, SWIGTYPE_p_uint32_t pixel_format, SWIGTYPE_p_uint32_t flags) {
    long cPtr = sdl2javaJNI.SDL_ConvertSurfaceFormat(SDL_Surface.getCPtr(src), src, SWIGTYPE_p_uint32_t.getCPtr(pixel_format), SWIGTYPE_p_uint32_t.getCPtr(flags));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static int SDL_ConvertPixels(int width, int height, SWIGTYPE_p_uint32_t src_format, SWIGTYPE_p_void src, int src_pitch, SWIGTYPE_p_uint32_t dst_format, SWIGTYPE_p_void dst, int dst_pitch) {
    return sdl2javaJNI.SDL_ConvertPixels(width, height, SWIGTYPE_p_uint32_t.getCPtr(src_format), SWIGTYPE_p_void.getCPtr(src), src_pitch, SWIGTYPE_p_uint32_t.getCPtr(dst_format), SWIGTYPE_p_void.getCPtr(dst), dst_pitch);
  }

  public static int SDL_PremultiplyAlpha(int width, int height, SWIGTYPE_p_uint32_t src_format, SWIGTYPE_p_void src, int src_pitch, SWIGTYPE_p_uint32_t dst_format, SWIGTYPE_p_void dst, int dst_pitch) {
    return sdl2javaJNI.SDL_PremultiplyAlpha(width, height, SWIGTYPE_p_uint32_t.getCPtr(src_format), SWIGTYPE_p_void.getCPtr(src), src_pitch, SWIGTYPE_p_uint32_t.getCPtr(dst_format), SWIGTYPE_p_void.getCPtr(dst), dst_pitch);
  }

  public static int SDL_FillRect(SDL_Surface dst, SDL_Rect rect, SWIGTYPE_p_uint32_t color) {
    return sdl2javaJNI.SDL_FillRect(SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(rect), rect, SWIGTYPE_p_uint32_t.getCPtr(color));
  }

  public static int SDL_FillRects(SDL_Surface dst, SDL_Rect rects, int count, SWIGTYPE_p_uint32_t color) {
    return sdl2javaJNI.SDL_FillRects(SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(rects), rects, count, SWIGTYPE_p_uint32_t.getCPtr(color));
  }

  public static int SDL_UpperBlit(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_UpperBlit(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_LowerBlit(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_LowerBlit(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_SoftStretch(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_SoftStretch(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_SoftStretchLinear(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_SoftStretchLinear(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_UpperBlitScaled(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_UpperBlitScaled(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static int SDL_LowerBlitScaled(SDL_Surface src, SDL_Rect srcrect, SDL_Surface dst, SDL_Rect dstrect) {
    return sdl2javaJNI.SDL_LowerBlitScaled(SDL_Surface.getCPtr(src), src, SDL_Rect.getCPtr(srcrect), srcrect, SDL_Surface.getCPtr(dst), dst, SDL_Rect.getCPtr(dstrect), dstrect);
  }

  public static void SDL_SetYUVConversionMode(SDL_YUV_CONVERSION_MODE mode) {
    sdl2javaJNI.SDL_SetYUVConversionMode(mode.swigValue());
  }

  public static SDL_YUV_CONVERSION_MODE SDL_GetYUVConversionMode() {
    return SDL_YUV_CONVERSION_MODE.swigToEnum(sdl2javaJNI.SDL_GetYUVConversionMode());
  }

  public static SDL_YUV_CONVERSION_MODE SDL_GetYUVConversionModeForResolution(int width, int height) {
    return SDL_YUV_CONVERSION_MODE.swigToEnum(sdl2javaJNI.SDL_GetYUVConversionModeForResolution(width, height));
  }

  public static int SDL_GetNumVideoDrivers() {
    return sdl2javaJNI.SDL_GetNumVideoDrivers();
  }

  public static String SDL_GetVideoDriver(int index) {
    return sdl2javaJNI.SDL_GetVideoDriver(index);
  }

  public static int SDL_VideoInit(String driver_name) {
    return sdl2javaJNI.SDL_VideoInit(driver_name);
  }

  public static void SDL_VideoQuit() {
    sdl2javaJNI.SDL_VideoQuit();
  }

  public static String SDL_GetCurrentVideoDriver() {
    return sdl2javaJNI.SDL_GetCurrentVideoDriver();
  }

  public static int SDL_GetNumVideoDisplays() {
    return sdl2javaJNI.SDL_GetNumVideoDisplays();
  }

  public static String SDL_GetDisplayName(int displayIndex) {
    return sdl2javaJNI.SDL_GetDisplayName(displayIndex);
  }

  public static int SDL_GetDisplayBounds(int displayIndex, SDL_Rect rect) {
    return sdl2javaJNI.SDL_GetDisplayBounds(displayIndex, SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_GetDisplayUsableBounds(int displayIndex, SDL_Rect rect) {
    return sdl2javaJNI.SDL_GetDisplayUsableBounds(displayIndex, SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_GetDisplayDPI(int displayIndex, SWIGTYPE_p_float ddpi, SWIGTYPE_p_float hdpi, SWIGTYPE_p_float vdpi) {
    return sdl2javaJNI.SDL_GetDisplayDPI(displayIndex, SWIGTYPE_p_float.getCPtr(ddpi), SWIGTYPE_p_float.getCPtr(hdpi), SWIGTYPE_p_float.getCPtr(vdpi));
  }

  public static SDL_DisplayOrientation SDL_GetDisplayOrientation(int displayIndex) {
    return SDL_DisplayOrientation.swigToEnum(sdl2javaJNI.SDL_GetDisplayOrientation(displayIndex));
  }

  public static int SDL_GetNumDisplayModes(int displayIndex) {
    return sdl2javaJNI.SDL_GetNumDisplayModes(displayIndex);
  }

  public static int SDL_GetDisplayMode(int displayIndex, int modeIndex, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_GetDisplayMode(displayIndex, modeIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_GetDesktopDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_GetCurrentDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static SDL_DisplayMode SDL_GetClosestDisplayMode(int displayIndex, SDL_DisplayMode mode, SDL_DisplayMode closest) {
    long cPtr = sdl2javaJNI.SDL_GetClosestDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode, SDL_DisplayMode.getCPtr(closest), closest);
    return (cPtr == 0) ? null : new SDL_DisplayMode(cPtr, false);
  }

  public static int SDL_GetPointDisplayIndex(SDL_Point point) {
    return sdl2javaJNI.SDL_GetPointDisplayIndex(SDL_Point.getCPtr(point), point);
  }

  public static int SDL_GetRectDisplayIndex(SDL_Rect rect) {
    return sdl2javaJNI.SDL_GetRectDisplayIndex(SDL_Rect.getCPtr(rect), rect);
  }

  public static int SDL_GetWindowDisplayIndex(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowDisplayIndex(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowDisplayMode(SWIGTYPE_p_SDL_Window window, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_SetWindowDisplayMode(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetWindowDisplayMode(SWIGTYPE_p_SDL_Window window, SDL_DisplayMode mode) {
    return sdl2javaJNI.SDL_GetWindowDisplayMode(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static SWIGTYPE_p_void SDL_GetWindowICCProfile(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_size_t size) {
    long cPtr = sdl2javaJNI.SDL_GetWindowICCProfile(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_size_t.getCPtr(size));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_uint32_t SDL_GetWindowPixelFormat(SWIGTYPE_p_SDL_Window window) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_GetWindowPixelFormat(SWIGTYPE_p_SDL_Window.getCPtr(window)), true);
  }

  public static SWIGTYPE_p_SDL_Window SDL_CreateWindow(String title, int x, int y, int w, int h, SWIGTYPE_p_uint32_t flags) {
    long cPtr = sdl2javaJNI.SDL_CreateWindow(title, x, y, w, h, SWIGTYPE_p_uint32_t.getCPtr(flags));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Window SDL_CreateWindowFrom(SWIGTYPE_p_void data) {
    long cPtr = sdl2javaJNI.SDL_CreateWindowFrom(SWIGTYPE_p_void.getCPtr(data));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_uint32_t SDL_GetWindowID(SWIGTYPE_p_SDL_Window window) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_GetWindowID(SWIGTYPE_p_SDL_Window.getCPtr(window)), true);
  }

  public static SWIGTYPE_p_SDL_Window SDL_GetWindowFromID(SWIGTYPE_p_uint32_t id) {
    long cPtr = sdl2javaJNI.SDL_GetWindowFromID(SWIGTYPE_p_uint32_t.getCPtr(id));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_uint32_t SDL_GetWindowFlags(SWIGTYPE_p_SDL_Window window) {
    return new SWIGTYPE_p_uint32_t(sdl2javaJNI.SDL_GetWindowFlags(SWIGTYPE_p_SDL_Window.getCPtr(window)), true);
  }

  public static void SDL_SetWindowTitle(SWIGTYPE_p_SDL_Window window, String title) {
    sdl2javaJNI.SDL_SetWindowTitle(SWIGTYPE_p_SDL_Window.getCPtr(window), title);
  }

  public static String SDL_GetWindowTitle(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowTitle(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_SetWindowIcon(SWIGTYPE_p_SDL_Window window, SDL_Surface icon) {
    sdl2javaJNI.SDL_SetWindowIcon(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_Surface.getCPtr(icon), icon);
  }

  public static SWIGTYPE_p_void SDL_SetWindowData(SWIGTYPE_p_SDL_Window window, String name, SWIGTYPE_p_void userdata) {
    long cPtr = sdl2javaJNI.SDL_SetWindowData(SWIGTYPE_p_SDL_Window.getCPtr(window), name, SWIGTYPE_p_void.getCPtr(userdata));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_GetWindowData(SWIGTYPE_p_SDL_Window window, String name) {
    long cPtr = sdl2javaJNI.SDL_GetWindowData(SWIGTYPE_p_SDL_Window.getCPtr(window), name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_SetWindowPosition(SWIGTYPE_p_SDL_Window window, int x, int y) {
    sdl2javaJNI.SDL_SetWindowPosition(SWIGTYPE_p_SDL_Window.getCPtr(window), x, y);
  }

  public static void SDL_GetWindowPosition(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int x, SWIGTYPE_p_int y) {
    sdl2javaJNI.SDL_GetWindowPosition(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(x), SWIGTYPE_p_int.getCPtr(y));
  }

  public static void SDL_SetWindowSize(SWIGTYPE_p_SDL_Window window, int w, int h) {
    sdl2javaJNI.SDL_SetWindowSize(SWIGTYPE_p_SDL_Window.getCPtr(window), w, h);
  }

  public static void SDL_GetWindowSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_GetWindowSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_GetWindowBordersSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int top, SWIGTYPE_p_int left, SWIGTYPE_p_int bottom, SWIGTYPE_p_int right) {
    return sdl2javaJNI.SDL_GetWindowBordersSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(top), SWIGTYPE_p_int.getCPtr(left), SWIGTYPE_p_int.getCPtr(bottom), SWIGTYPE_p_int.getCPtr(right));
  }

  public static void SDL_GetWindowSizeInPixels(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_GetWindowSizeInPixels(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static void SDL_SetWindowMinimumSize(SWIGTYPE_p_SDL_Window window, int min_w, int min_h) {
    sdl2javaJNI.SDL_SetWindowMinimumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), min_w, min_h);
  }

  public static void SDL_GetWindowMinimumSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_GetWindowMinimumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static void SDL_SetWindowMaximumSize(SWIGTYPE_p_SDL_Window window, int max_w, int max_h) {
    sdl2javaJNI.SDL_SetWindowMaximumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), max_w, max_h);
  }

  public static void SDL_GetWindowMaximumSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_GetWindowMaximumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static void SDL_SetWindowBordered(SWIGTYPE_p_SDL_Window window, SDL_bool bordered) {
    sdl2javaJNI.SDL_SetWindowBordered(SWIGTYPE_p_SDL_Window.getCPtr(window), bordered.swigValue());
  }

  public static void SDL_SetWindowResizable(SWIGTYPE_p_SDL_Window window, SDL_bool resizable) {
    sdl2javaJNI.SDL_SetWindowResizable(SWIGTYPE_p_SDL_Window.getCPtr(window), resizable.swigValue());
  }

  public static void SDL_SetWindowAlwaysOnTop(SWIGTYPE_p_SDL_Window window, SDL_bool on_top) {
    sdl2javaJNI.SDL_SetWindowAlwaysOnTop(SWIGTYPE_p_SDL_Window.getCPtr(window), on_top.swigValue());
  }

  public static void SDL_ShowWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_ShowWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_HideWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_HideWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_RaiseWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_RaiseWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_MaximizeWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_MaximizeWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_MinimizeWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_MinimizeWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_RestoreWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_RestoreWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowFullscreen(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_uint32_t flags) {
    return sdl2javaJNI.SDL_SetWindowFullscreen(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_uint32_t.getCPtr(flags));
  }

  public static SDL_bool SDL_HasWindowSurface(SWIGTYPE_p_SDL_Window window) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasWindowSurface(SWIGTYPE_p_SDL_Window.getCPtr(window)));
  }

  public static SDL_Surface SDL_GetWindowSurface(SWIGTYPE_p_SDL_Window window) {
    long cPtr = sdl2javaJNI.SDL_GetWindowSurface(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SDL_Surface(cPtr, false);
  }

  public static int SDL_UpdateWindowSurface(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_UpdateWindowSurface(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_UpdateWindowSurfaceRects(SWIGTYPE_p_SDL_Window window, SDL_Rect rects, int numrects) {
    return sdl2javaJNI.SDL_UpdateWindowSurfaceRects(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_Rect.getCPtr(rects), rects, numrects);
  }

  public static int SDL_DestroyWindowSurface(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_DestroyWindowSurface(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_SetWindowGrab(SWIGTYPE_p_SDL_Window window, SDL_bool grabbed) {
    sdl2javaJNI.SDL_SetWindowGrab(SWIGTYPE_p_SDL_Window.getCPtr(window), grabbed.swigValue());
  }

  public static void SDL_SetWindowKeyboardGrab(SWIGTYPE_p_SDL_Window window, SDL_bool grabbed) {
    sdl2javaJNI.SDL_SetWindowKeyboardGrab(SWIGTYPE_p_SDL_Window.getCPtr(window), grabbed.swigValue());
  }

  public static void SDL_SetWindowMouseGrab(SWIGTYPE_p_SDL_Window window, SDL_bool grabbed) {
    sdl2javaJNI.SDL_SetWindowMouseGrab(SWIGTYPE_p_SDL_Window.getCPtr(window), grabbed.swigValue());
  }

  public static SDL_bool SDL_GetWindowGrab(SWIGTYPE_p_SDL_Window window) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GetWindowGrab(SWIGTYPE_p_SDL_Window.getCPtr(window)));
  }

  public static SDL_bool SDL_GetWindowKeyboardGrab(SWIGTYPE_p_SDL_Window window) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GetWindowKeyboardGrab(SWIGTYPE_p_SDL_Window.getCPtr(window)));
  }

  public static SDL_bool SDL_GetWindowMouseGrab(SWIGTYPE_p_SDL_Window window) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GetWindowMouseGrab(SWIGTYPE_p_SDL_Window.getCPtr(window)));
  }

  public static SWIGTYPE_p_SDL_Window SDL_GetGrabbedWindow() {
    long cPtr = sdl2javaJNI.SDL_GetGrabbedWindow();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static int SDL_SetWindowMouseRect(SWIGTYPE_p_SDL_Window window, SDL_Rect rect) {
    return sdl2javaJNI.SDL_SetWindowMouseRect(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_Rect.getCPtr(rect), rect);
  }

  public static SDL_Rect SDL_GetWindowMouseRect(SWIGTYPE_p_SDL_Window window) {
    long cPtr = sdl2javaJNI.SDL_GetWindowMouseRect(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SDL_Rect(cPtr, false);
  }

  public static int SDL_SetWindowBrightness(SWIGTYPE_p_SDL_Window window, float brightness) {
    return sdl2javaJNI.SDL_SetWindowBrightness(SWIGTYPE_p_SDL_Window.getCPtr(window), brightness);
  }

  public static float SDL_GetWindowBrightness(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_GetWindowBrightness(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowOpacity(SWIGTYPE_p_SDL_Window window, float opacity) {
    return sdl2javaJNI.SDL_SetWindowOpacity(SWIGTYPE_p_SDL_Window.getCPtr(window), opacity);
  }

  public static int SDL_GetWindowOpacity(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_float out_opacity) {
    return sdl2javaJNI.SDL_GetWindowOpacity(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_float.getCPtr(out_opacity));
  }

  public static int SDL_SetWindowModalFor(SWIGTYPE_p_SDL_Window modal_window, SWIGTYPE_p_SDL_Window parent_window) {
    return sdl2javaJNI.SDL_SetWindowModalFor(SWIGTYPE_p_SDL_Window.getCPtr(modal_window), SWIGTYPE_p_SDL_Window.getCPtr(parent_window));
  }

  public static int SDL_SetWindowInputFocus(SWIGTYPE_p_SDL_Window window) {
    return sdl2javaJNI.SDL_SetWindowInputFocus(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowGammaRamp(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_uint16_t red, SWIGTYPE_p_uint16_t green, SWIGTYPE_p_uint16_t blue) {
    return sdl2javaJNI.SDL_SetWindowGammaRamp(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_uint16_t.getCPtr(red), SWIGTYPE_p_uint16_t.getCPtr(green), SWIGTYPE_p_uint16_t.getCPtr(blue));
  }

  public static int SDL_GetWindowGammaRamp(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_uint16_t red, SWIGTYPE_p_uint16_t green, SWIGTYPE_p_uint16_t blue) {
    return sdl2javaJNI.SDL_GetWindowGammaRamp(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_uint16_t.getCPtr(red), SWIGTYPE_p_uint16_t.getCPtr(green), SWIGTYPE_p_uint16_t.getCPtr(blue));
  }

  public static int SDL_SetWindowHitTest(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_f_p_struct_SDL_Window_p_q_const__struct_SDL_Point_p_void__SDL_HitTestResult callback, SWIGTYPE_p_void callback_data) {
    return sdl2javaJNI.SDL_SetWindowHitTest(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_f_p_struct_SDL_Window_p_q_const__struct_SDL_Point_p_void__SDL_HitTestResult.getCPtr(callback), SWIGTYPE_p_void.getCPtr(callback_data));
  }

  public static int SDL_FlashWindow(SWIGTYPE_p_SDL_Window window, SDL_FlashOperation operation) {
    return sdl2javaJNI.SDL_FlashWindow(SWIGTYPE_p_SDL_Window.getCPtr(window), operation.swigValue());
  }

  public static void SDL_DestroyWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_DestroyWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SDL_bool SDL_IsScreenSaverEnabled() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsScreenSaverEnabled());
  }

  public static void SDL_EnableScreenSaver() {
    sdl2javaJNI.SDL_EnableScreenSaver();
  }

  public static void SDL_DisableScreenSaver() {
    sdl2javaJNI.SDL_DisableScreenSaver();
  }

  public static int SDL_GL_LoadLibrary(String path) {
    return sdl2javaJNI.SDL_GL_LoadLibrary(path);
  }

  public static SWIGTYPE_p_void SDL_GL_GetProcAddress(String proc) {
    long cPtr = sdl2javaJNI.SDL_GL_GetProcAddress(proc);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_GL_UnloadLibrary() {
    sdl2javaJNI.SDL_GL_UnloadLibrary();
  }

  public static SDL_bool SDL_GL_ExtensionSupported(String extension) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_GL_ExtensionSupported(extension));
  }

  public static void SDL_GL_ResetAttributes() {
    sdl2javaJNI.SDL_GL_ResetAttributes();
  }

  public static int SDL_GL_SetAttribute(SDL_GLattr attr, int value) {
    return sdl2javaJNI.SDL_GL_SetAttribute(attr.swigValue(), value);
  }

  public static int SDL_GL_GetAttribute(SDL_GLattr attr, SWIGTYPE_p_int value) {
    return sdl2javaJNI.SDL_GL_GetAttribute(attr.swigValue(), SWIGTYPE_p_int.getCPtr(value));
  }

  public static SWIGTYPE_p_void SDL_GL_CreateContext(SWIGTYPE_p_SDL_Window window) {
    long cPtr = sdl2javaJNI.SDL_GL_CreateContext(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_GL_MakeCurrent(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_void context) {
    return sdl2javaJNI.SDL_GL_MakeCurrent(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_void.getCPtr(context));
  }

  public static SWIGTYPE_p_SDL_Window SDL_GL_GetCurrentWindow() {
    long cPtr = sdl2javaJNI.SDL_GL_GetCurrentWindow();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_GL_GetCurrentContext() {
    long cPtr = sdl2javaJNI.SDL_GL_GetCurrentContext();
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_GL_GetDrawableSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    sdl2javaJNI.SDL_GL_GetDrawableSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_GL_SetSwapInterval(int interval) {
    return sdl2javaJNI.SDL_GL_SetSwapInterval(interval);
  }

  public static int SDL_GL_GetSwapInterval() {
    return sdl2javaJNI.SDL_GL_GetSwapInterval();
  }

  public static void SDL_GL_SwapWindow(SWIGTYPE_p_SDL_Window window) {
    sdl2javaJNI.SDL_GL_SwapWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_GL_DeleteContext(SWIGTYPE_p_void context) {
    sdl2javaJNI.SDL_GL_DeleteContext(SWIGTYPE_p_void.getCPtr(context));
  }

  public static SWIGTYPE_p_SDL_Window SDL_GetKeyboardFocus() {
    long cPtr = sdl2javaJNI.SDL_GetKeyboardFocus();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_uint8_t SDL_GetKeyboardState(SWIGTYPE_p_int numkeys) {
    long cPtr = sdl2javaJNI.SDL_GetKeyboardState(SWIGTYPE_p_int.getCPtr(numkeys));
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public static void SDL_ResetKeyboard() {
    sdl2javaJNI.SDL_ResetKeyboard();
  }

  public static SDL_Keymod SDL_GetModState() {
    return SDL_Keymod.swigToEnum(sdl2javaJNI.SDL_GetModState());
  }

  public static void SDL_SetModState(SDL_Keymod modstate) {
    sdl2javaJNI.SDL_SetModState(modstate.swigValue());
  }

  public static SWIGTYPE_p_int32_t SDL_GetKeyFromScancode(SDL_Scancode scancode) {
    return new SWIGTYPE_p_int32_t(sdl2javaJNI.SDL_GetKeyFromScancode(scancode.swigValue()), true);
  }

  public static SDL_Scancode SDL_GetScancodeFromKey(SWIGTYPE_p_int32_t key) {
    return SDL_Scancode.swigToEnum(sdl2javaJNI.SDL_GetScancodeFromKey(SWIGTYPE_p_int32_t.getCPtr(key)));
  }

  public static String SDL_GetScancodeName(SDL_Scancode scancode) {
    return sdl2javaJNI.SDL_GetScancodeName(scancode.swigValue());
  }

  public static SDL_Scancode SDL_GetScancodeFromName(String name) {
    return SDL_Scancode.swigToEnum(sdl2javaJNI.SDL_GetScancodeFromName(name));
  }

  public static String SDL_GetKeyName(SWIGTYPE_p_int32_t key) {
    return sdl2javaJNI.SDL_GetKeyName(SWIGTYPE_p_int32_t.getCPtr(key));
  }

  public static SWIGTYPE_p_int32_t SDL_GetKeyFromName(String name) {
    return new SWIGTYPE_p_int32_t(sdl2javaJNI.SDL_GetKeyFromName(name), true);
  }

  public static void SDL_StartTextInput() {
    sdl2javaJNI.SDL_StartTextInput();
  }

  public static SDL_bool SDL_IsTextInputActive() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsTextInputActive());
  }

  public static void SDL_StopTextInput() {
    sdl2javaJNI.SDL_StopTextInput();
  }

  public static void SDL_ClearComposition() {
    sdl2javaJNI.SDL_ClearComposition();
  }

  public static SDL_bool SDL_IsTextInputShown() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsTextInputShown());
  }

  public static void SDL_SetTextInputRect(SDL_Rect rect) {
    sdl2javaJNI.SDL_SetTextInputRect(SDL_Rect.getCPtr(rect), rect);
  }

  public static SDL_bool SDL_HasScreenKeyboardSupport() {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_HasScreenKeyboardSupport());
  }

  public static SDL_bool SDL_IsScreenKeyboardShown(SWIGTYPE_p_SDL_Window window) {
    return SDL_bool.swigToEnum(sdl2javaJNI.SDL_IsScreenKeyboardShown(SWIGTYPE_p_SDL_Window.getCPtr(window)));
  }

}
